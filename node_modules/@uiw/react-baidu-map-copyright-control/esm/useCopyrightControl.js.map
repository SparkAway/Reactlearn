{
  "version": 3,
  "sources": [
    "../src/useCopyrightControl.tsx"
  ],
  "names": [
    "useEffect",
    "useState",
    "useMapContext",
    "useProperties",
    "useVisiable",
    "useCopyrightControl",
    "props",
    "copyrightControl",
    "setCopyrightControl",
    "anchor",
    "offset",
    "map",
    "instance",
    "BMap",
    "CopyrightControl",
    "BMAP_ANCHOR_TOP_RIGHT",
    "addControl",
    "removeControl"
  ],
  "mappings": "AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,4BAA3C;AAKA,OAAO,SAASC,mBAAT,CAA6BC,KAA7B,EAAgE;AAAA,MAAnCA,KAAmC;AAAnCA,IAAAA,KAAmC,GAA3B,EAA2B;AAAA;;AACrE,MAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,EAAxD;AAEA,MAAM;AAAEQ,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBJ,KAA3B;AACA,MAAM;AAAEK,IAAAA;AAAF,MAAUT,aAAa,EAA7B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,GAAG,IAAI,CAACJ,gBAAZ,EAA8B;AAC5B,UAAMK,QAAQ,GAAG,IAAIC,IAAI,CAACC,gBAAT,CAA0B;AACzCL,QAAAA,MAAM,EAAEA,MAAM,IAAIM,qBADuB;AAEzCL,QAAAA;AAFyC,OAA1B,CAAjB;AAIAC,MAAAA,GAAG,CAACK,UAAJ,CAAeJ,QAAf;AACAJ,MAAAA,mBAAmB,CAACI,QAAD,CAAnB;AACD;;AACD,WAAO,MAAM;AACX,UAAID,GAAG,IAAIJ,gBAAX,EAA6B;AAC3BI,QAAAA,GAAG,CAACM,aAAJ,CAAkBV,gBAAlB;AACD;AACF,KAJD;AAKD,GAdQ,EAcN,CAACI,GAAD,EAAMJ,gBAAN,EAAwBE,MAAxB,EAAgCC,MAAhC,CAdM,CAAT;AAgBAN,EAAAA,WAAW,CAACG,gBAAD,EAAoBD,KAApB,CAAX;AACAH,EAAAA,aAAa,CAA6CI,gBAA7C,EAAgED,KAAhE,EAAuE,CAAC,QAAD,EAAW,QAAX,CAAvE,CAAb;AAEA,SAAO;AACLC,IAAAA,gBADK;AAELC,IAAAA;AAFK,GAAP;AAID",
  "sourcesContent": [
    "import { useEffect, useState } from 'react';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\nimport { useProperties, useVisiable } from '@uiw/react-baidu-map-utils';\nimport { CopyrightControlProps } from './';\n\nexport interface UseCopyrightControl extends CopyrightControlProps {}\n\nexport function useCopyrightControl(props = {} as UseCopyrightControl) {\n  const [copyrightControl, setCopyrightControl] = useState<BMap.CopyrightControl>();\n\n  const { anchor, offset } = props;\n  const { map } = useMapContext();\n  useEffect(() => {\n    if (map && !copyrightControl) {\n      const instance = new BMap.CopyrightControl({\n        anchor: anchor || BMAP_ANCHOR_TOP_RIGHT,\n        offset,\n      });\n      map.addControl(instance);\n      setCopyrightControl(instance);\n    }\n    return () => {\n      if (map && copyrightControl) {\n        map.removeControl(copyrightControl);\n      }\n    };\n  }, [map, copyrightControl, anchor, offset]);\n\n  useVisiable(copyrightControl!, props);\n  useProperties<BMap.CopyrightControl, UseCopyrightControl>(copyrightControl!, props, ['Anchor', 'Offset']);\n\n  return {\n    copyrightControl,\n    setCopyrightControl,\n  };\n}\n"
  ]
}