{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "React",
    "useImperativeHandle",
    "Fragment",
    "useCopyrightControl",
    "CopyrightControlItem",
    "CopyrightControl",
    "forwardRef",
    "props",
    "ref",
    "copyrightControl",
    "Children",
    "toArray",
    "children",
    "map",
    "child",
    "index",
    "isValidElement",
    "cloneElement",
    "control",
    "id",
    "Item"
  ],
  "mappings": ";AAAA,OAAOA,KAAP,IAAgBC,mBAAhB,EAAqCC,QAArC,QAAqD,OAArD;AAEA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,oBAAT,QAAqC,QAArC;;AAEA,cAAc,QAAd;AACA,cAAc,uBAAd;AASA,IAAMC,gBAAqB,gBAAGL,KAAK,CAACM,UAAN,CAAwC,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACpF,MAAM;AAAEC,IAAAA;AAAF,MAAuBN,mBAAmB,CAACI,KAAD,CAAhD;AACAN,EAAAA,mBAAmB,CAACO,GAAD,EAAM,mBAAYD,KAAZ;AAAmBE,IAAAA;AAAnB,IAAN,EAA8C,CAACA,gBAAD,CAA9C,CAAnB;AACA,sBACE,KAAC,QAAD;AAAA,cACGT,KAAK,CAACU,QAAN,CAAeC,OAAf,CAAuBJ,KAAK,CAACK,QAA7B,EAAuCC,GAAvC,CAA2C,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC5D,wBAAIf,KAAK,CAACgB,cAAN,CAAqBF,KAArB,CAAJ,EAAiC;AAC/B,4BAAOd,KAAK,CAACiB,YAAN,CAAmBH,KAAnB,EAA0B;AAC/BI,UAAAA,OAAO,EAAET,gBADsB;AAE/BU,UAAAA,EAAE,EAAEJ,KAAK,GAAG;AAFmB,SAA1B,CAAP;AAID;;AACD,aAAOD,KAAP;AACD,KARA;AADH,IADF;AAaD,CAhB6B,CAA9B;AAkBAT,gBAAgB,CAACe,IAAjB,GAAwBhB,oBAAxB;AAEA,eAAeC,gBAAf",
  "sourcesContent": [
    "import React, { useImperativeHandle, Fragment } from 'react';\nimport { OverlayProps } from '@uiw/react-baidu-map-map';\nimport { useCopyrightControl } from './useCopyrightControl';\nimport { CopyrightControlItem } from './Item';\n\nexport * from './Item';\nexport * from './useCopyrightControl';\n\nexport interface CopyrightControlProps extends OverlayProps, BMap.CopyrightControlOptions {\n  /**\n   * 自定义 DOM 元素。\n   */\n  children?: React.ReactNode;\n}\n\nconst CopyrightControl: any = React.forwardRef<CopyrightControlProps>((props, ref) => {\n  const { copyrightControl } = useCopyrightControl(props);\n  useImperativeHandle(ref, () => ({ ...props, copyrightControl }), [copyrightControl]);\n  return (\n    <Fragment>\n      {React.Children.toArray(props.children).map((child, index) => {\n        if (React.isValidElement(child)) {\n          return React.cloneElement(child, {\n            control: copyrightControl,\n            id: index + 1,\n          });\n        }\n        return child;\n      })}\n    </Fragment>\n  );\n});\n\nCopyrightControl.Item = CopyrightControlItem;\n\nexport default CopyrightControl;\n"
  ]
}