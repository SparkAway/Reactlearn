{
  "version": 3,
  "sources": [
    "../src/useCopyrightControl.tsx"
  ],
  "names": [
    "useCopyrightControl",
    "props",
    "copyrightControl",
    "setCopyrightControl",
    "anchor",
    "offset",
    "map",
    "instance",
    "BMap",
    "CopyrightControl",
    "BMAP_ANCHOR_TOP_RIGHT",
    "addControl",
    "removeControl"
  ],
  "mappings": ";;;;;;;;;;;AAAA;;AACA;;AACA;;AAKO,SAASA,mBAAT,GAAgE;AAAA,MAAnCC,KAAmC,uEAA3B,EAA2B;;AACrE,kBAAgD,sBAAhD;AAAA;AAAA,MAAOC,gBAAP;AAAA,MAAyBC,mBAAzB;;AAEA,MAAQC,MAAR,GAA2BH,KAA3B,CAAQG,MAAR;AAAA,MAAgBC,MAAhB,GAA2BJ,KAA3B,CAAgBI,MAAhB;;AACA,uBAAgB,sCAAhB;AAAA,MAAQC,GAAR,kBAAQA,GAAR;;AACA,wBAAU,YAAM;AACd,QAAIA,GAAG,IAAI,CAACJ,gBAAZ,EAA8B;AAC5B,UAAMK,QAAQ,GAAG,IAAIC,IAAI,CAACC,gBAAT,CAA0B;AACzCL,QAAAA,MAAM,EAAEA,MAAM,IAAIM,qBADuB;AAEzCL,QAAAA,MAAM,EAANA;AAFyC,OAA1B,CAAjB;AAIAC,MAAAA,GAAG,CAACK,UAAJ,CAAeJ,QAAf;AACAJ,MAAAA,mBAAmB,CAACI,QAAD,CAAnB;AACD;;AACD,WAAO,YAAM;AACX,UAAID,GAAG,IAAIJ,gBAAX,EAA6B;AAC3BI,QAAAA,GAAG,CAACM,aAAJ,CAAkBV,gBAAlB;AACD;AACF,KAJD;AAKD,GAdD,EAcG,CAACI,GAAD,EAAMJ,gBAAN,EAAwBE,MAAxB,EAAgCC,MAAhC,CAdH;AAgBA,uCAAYH,gBAAZ,EAA+BD,KAA/B;AACA,yCAA0DC,gBAA1D,EAA6ED,KAA7E,EAAoF,CAAC,QAAD,EAAW,QAAX,CAApF;AAEA,SAAO;AACLC,IAAAA,gBAAgB,EAAhBA,gBADK;AAELC,IAAAA,mBAAmB,EAAnBA;AAFK,GAAP;AAID",
  "sourcesContent": [
    "import { useEffect, useState } from 'react';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\nimport { useProperties, useVisiable } from '@uiw/react-baidu-map-utils';\nimport { CopyrightControlProps } from './';\n\nexport interface UseCopyrightControl extends CopyrightControlProps {}\n\nexport function useCopyrightControl(props = {} as UseCopyrightControl) {\n  const [copyrightControl, setCopyrightControl] = useState<BMap.CopyrightControl>();\n\n  const { anchor, offset } = props;\n  const { map } = useMapContext();\n  useEffect(() => {\n    if (map && !copyrightControl) {\n      const instance = new BMap.CopyrightControl({\n        anchor: anchor || BMAP_ANCHOR_TOP_RIGHT,\n        offset,\n      });\n      map.addControl(instance);\n      setCopyrightControl(instance);\n    }\n    return () => {\n      if (map && copyrightControl) {\n        map.removeControl(copyrightControl);\n      }\n    };\n  }, [map, copyrightControl, anchor, offset]);\n\n  useVisiable(copyrightControl!, props);\n  useProperties<BMap.CopyrightControl, UseCopyrightControl>(copyrightControl!, props, ['Anchor', 'Offset']);\n\n  return {\n    copyrightControl,\n    setCopyrightControl,\n  };\n}\n"
  ]
}