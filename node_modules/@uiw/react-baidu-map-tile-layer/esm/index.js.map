{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "React",
    "useImperativeHandle",
    "useEffect",
    "useTileLayer",
    "forwardRef",
    "props",
    "ref",
    "tileLayer",
    "setVisiable",
    "visiable"
  ],
  "mappings": ";AAAA,OAAOA,KAAP,IAAgBC,mBAAhB,EAAqCC,SAArC,QAAsD,OAAtD;AAEA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,cAAc,gBAAd;AAMA,4BAAeH,KAAK,CAACI,UAAN,CAAiD,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC9E,MAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA6BL,YAAY,CAACE,KAAD,CAA/C,CAD8E,CAE9E;;AACAJ,EAAAA,mBAAmB,CAACK,GAAD,EAAM,mBAAYD,KAAZ;AAAmBE,IAAAA;AAAnB,IAAN,EAAuC,CAACA,SAAD,CAAvC,CAAnB,CAH8E,CAI9E;;AACAL,EAAAA,SAAS,CAAC,MAAMM,WAAW,CAACH,KAAK,CAACI,QAAP,CAAlB,EAAqC,CAACJ,KAAK,CAACI,QAAP,CAArC,CAAT;AACA,SAAO,IAAP;AACD,CAPc,CAAf",
  "sourcesContent": [
    "import React, { useImperativeHandle, useEffect } from 'react';\nimport { OverlayProps } from '@uiw/react-baidu-map-map';\nimport { useTileLayer } from './useTileLayer';\n\nexport * from './useTileLayer';\n\nexport interface TileLayerProps extends OverlayProps, BMap.TileLayerOptions, BMap.TileLayer {\n  visiable?: boolean;\n}\n\nexport default React.forwardRef<TileLayerProps, TileLayerProps>((props, ref) => {\n  const { tileLayer, setVisiable } = useTileLayer(props);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useImperativeHandle(ref, () => ({ ...props, tileLayer }), [tileLayer]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => setVisiable(props.visiable!), [props.visiable]);\n  return null;\n});\n"
  ]
}