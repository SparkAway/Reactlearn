{
  "version": 3,
  "sources": [
    "../src/useTileLayer.ts"
  ],
  "names": [
    "useEffect",
    "useState",
    "useMapContext",
    "useTileLayer",
    "props",
    "tileLayer",
    "setTileLayer",
    "transparentPng",
    "tileUrlTemplate",
    "copyright",
    "zIndex",
    "map",
    "instance",
    "BMap",
    "TileLayer",
    "getTilesUrl",
    "getCopyright",
    "addTileLayer",
    "removeTileLayer",
    "visiable",
    "setVisiable"
  ],
  "mappings": "AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,0BAA9B;;AAIA;AACA;AACA;AACA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAAkD;AAAA,MAA5BA,KAA4B;AAA5BA,IAAAA,KAA4B,GAApB,EAAoB;AAAA;;AACvD,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,EAA1C;AACA,MAAM;AAAEM,IAAAA,cAAc,GAAG,IAAnB;AAAyBC,IAAAA,eAAzB;AAA0CC,IAAAA,SAA1C;AAAqDC,IAAAA;AAArD,MAAgEN,KAAtE;AACA,MAAM;AAAEO,IAAAA;AAAF,MAAUT,aAAa,EAA7B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,GAAG,IAAI,CAACN,SAAZ,EAAuB;AACrB,UAAMO,QAAQ,GAAG,IAAIC,IAAI,CAACC,SAAT,CAAmB;AAClCP,QAAAA,cADkC;AAElCC,QAAAA,eAFkC;AAGlCC,QAAAA,SAHkC;AAIlCC,QAAAA;AAJkC,OAAnB,CAAjB;;AAMA,UAAI,CAAC,CAACN,KAAK,CAACW,WAAZ,EAAyB;AACvBH,QAAAA,QAAQ,CAACG,WAAT,GAAuBX,KAAK,CAACW,WAA7B;AACD;;AACD,UAAI,CAAC,CAACX,KAAK,CAACY,YAAZ,EAA0B;AACxBJ,QAAAA,QAAQ,CAACI,YAAT,GAAwBZ,KAAK,CAACY,YAA9B;AACD;;AACDL,MAAAA,GAAG,CAACM,YAAJ,CAAiBL,QAAjB;AACAN,MAAAA,YAAY,CAACM,QAAD,CAAZ;AACA,aAAO,MAAM;AACX,YAAIA,QAAJ,EAAc;AACZD,UAAAA,GAAG,CAACO,eAAJ,CAAoBN,QAApB;AACD;AACF,OAJD;AAKD,KArBa,CAsBd;;AACD,GAvBQ,EAuBN,CAACD,GAAD,CAvBM,CAAT;AAyBA,MAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAACG,KAAK,CAACe,QAAP,CAAxC;AACAnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,GAAG,IAAIN,SAAX,EAAsB;AACpBc,MAAAA,QAAQ,GAAGR,GAAG,CAACM,YAAJ,CAAiBZ,SAAjB,CAAH,GAAiCM,GAAG,CAACO,eAAJ,CAAoBb,SAApB,CAAzC;AACD,KAHa,CAId;;AACD,GALQ,EAKN,CAACc,QAAD,EAAWR,GAAX,CALM,CAAT;AAOA,SAAO;AACLN,IAAAA,SADK;AAELC,IAAAA,YAFK;AAGLa,IAAAA,QAHK;AAILC,IAAAA;AAJK,GAAP;AAMD",
  "sourcesContent": [
    "import { useEffect, useState } from 'react';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\nimport { TileLayerProps } from './';\n\nexport interface UseTileLayer extends TileLayerProps {}\n/**\n * https://lbsyun.baidu.com/jsdemo.htm#g0_2\n */\nexport function useTileLayer(props = {} as UseTileLayer) {\n  const [tileLayer, setTileLayer] = useState<BMap.TileLayer>();\n  const { transparentPng = true, tileUrlTemplate, copyright, zIndex } = props;\n  const { map } = useMapContext();\n\n  useEffect(() => {\n    if (map && !tileLayer) {\n      const instance = new BMap.TileLayer({\n        transparentPng,\n        tileUrlTemplate,\n        copyright,\n        zIndex,\n      });\n      if (!!props.getTilesUrl) {\n        instance.getTilesUrl = props.getTilesUrl;\n      }\n      if (!!props.getCopyright) {\n        instance.getCopyright = props.getCopyright;\n      }\n      map.addTileLayer(instance);\n      setTileLayer(instance);\n      return () => {\n        if (instance) {\n          map.removeTileLayer(instance);\n        }\n      };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map]);\n\n  const [visiable, setVisiable] = useState(props.visiable);\n  useEffect(() => {\n    if (map && tileLayer) {\n      visiable ? map.addTileLayer(tileLayer) : map.removeTileLayer(tileLayer);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [visiable, map]);\n\n  return {\n    tileLayer,\n    setTileLayer,\n    visiable,\n    setVisiable,\n  };\n}\n"
  ]
}