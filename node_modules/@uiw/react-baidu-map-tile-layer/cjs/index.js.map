{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "React",
    "forwardRef",
    "props",
    "ref",
    "tileLayer",
    "setVisiable",
    "visiable"
  ],
  "mappings": ";;;;;;;;;;;;;;AAAA;;AAEA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;4BAMeA,eAAMC,UAAN,CAAiD,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC9E,sBAAmC,iCAAaD,KAAb,CAAnC;AAAA,MAAQE,SAAR,iBAAQA,SAAR;AAAA,MAAmBC,WAAnB,iBAAmBA,WAAnB,CAD8E,CAE9E;;;AACA,kCAAoBF,GAApB,EAAyB;AAAA,uEAAYD,KAAZ;AAAmBE,MAAAA,SAAS,EAATA;AAAnB;AAAA,GAAzB,EAA0D,CAACA,SAAD,CAA1D,EAH8E,CAI9E;;AACA,wBAAU;AAAA,WAAMC,WAAW,CAACH,KAAK,CAACI,QAAP,CAAjB;AAAA,GAAV,EAA8C,CAACJ,KAAK,CAACI,QAAP,CAA9C;AACA,SAAO,IAAP;AACD,CAPc,C",
  "sourcesContent": [
    "import React, { useImperativeHandle, useEffect } from 'react';\nimport { OverlayProps } from '@uiw/react-baidu-map-map';\nimport { useTileLayer } from './useTileLayer';\n\nexport * from './useTileLayer';\n\nexport interface TileLayerProps extends OverlayProps, BMap.TileLayerOptions, BMap.TileLayer {\n  visiable?: boolean;\n}\n\nexport default React.forwardRef<TileLayerProps, TileLayerProps>((props, ref) => {\n  const { tileLayer, setVisiable } = useTileLayer(props);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useImperativeHandle(ref, () => ({ ...props, tileLayer }), [tileLayer]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => setVisiable(props.visiable!), [props.visiable]);\n  return null;\n});\n"
  ]
}