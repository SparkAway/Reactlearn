{
  "version": 3,
  "sources": [
    "../src/useTileLayer.ts"
  ],
  "names": [
    "useTileLayer",
    "props",
    "tileLayer",
    "setTileLayer",
    "transparentPng",
    "tileUrlTemplate",
    "copyright",
    "zIndex",
    "map",
    "instance",
    "BMap",
    "TileLayer",
    "getTilesUrl",
    "getCopyright",
    "addTileLayer",
    "removeTileLayer",
    "visiable",
    "setVisiable"
  ],
  "mappings": ";;;;;;;;;;;AAAA;;AACA;;AAIA;AACA;AACA;AACO,SAASA,YAAT,GAAkD;AAAA,MAA5BC,KAA4B,uEAApB,EAAoB;;AACvD,kBAAkC,sBAAlC;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AACA,8BAAsEF,KAAtE,CAAQG,cAAR;AAAA,MAAQA,cAAR,sCAAyB,IAAzB;AAAA,MAA+BC,eAA/B,GAAsEJ,KAAtE,CAA+BI,eAA/B;AAAA,MAAgDC,SAAhD,GAAsEL,KAAtE,CAAgDK,SAAhD;AAAA,MAA2DC,MAA3D,GAAsEN,KAAtE,CAA2DM,MAA3D;;AACA,uBAAgB,sCAAhB;AAAA,MAAQC,GAAR,kBAAQA,GAAR;;AAEA,wBAAU,YAAM;AACd,QAAIA,GAAG,IAAI,CAACN,SAAZ,EAAuB;AACrB,UAAMO,QAAQ,GAAG,IAAIC,IAAI,CAACC,SAAT,CAAmB;AAClCP,QAAAA,cAAc,EAAdA,cADkC;AAElCC,QAAAA,eAAe,EAAfA,eAFkC;AAGlCC,QAAAA,SAAS,EAATA,SAHkC;AAIlCC,QAAAA,MAAM,EAANA;AAJkC,OAAnB,CAAjB;;AAMA,UAAI,CAAC,CAACN,KAAK,CAACW,WAAZ,EAAyB;AACvBH,QAAAA,QAAQ,CAACG,WAAT,GAAuBX,KAAK,CAACW,WAA7B;AACD;;AACD,UAAI,CAAC,CAACX,KAAK,CAACY,YAAZ,EAA0B;AACxBJ,QAAAA,QAAQ,CAACI,YAAT,GAAwBZ,KAAK,CAACY,YAA9B;AACD;;AACDL,MAAAA,GAAG,CAACM,YAAJ,CAAiBL,QAAjB;AACAN,MAAAA,YAAY,CAACM,QAAD,CAAZ;AACA,aAAO,YAAM;AACX,YAAIA,QAAJ,EAAc;AACZD,UAAAA,GAAG,CAACO,eAAJ,CAAoBN,QAApB;AACD;AACF,OAJD;AAKD,KArBa,CAsBd;;AACD,GAvBD,EAuBG,CAACD,GAAD,CAvBH;;AAyBA,mBAAgC,qBAASP,KAAK,CAACe,QAAf,CAAhC;AAAA;AAAA,MAAOA,QAAP;AAAA,MAAiBC,WAAjB;;AACA,wBAAU,YAAM;AACd,QAAIT,GAAG,IAAIN,SAAX,EAAsB;AACpBc,MAAAA,QAAQ,GAAGR,GAAG,CAACM,YAAJ,CAAiBZ,SAAjB,CAAH,GAAiCM,GAAG,CAACO,eAAJ,CAAoBb,SAApB,CAAzC;AACD,KAHa,CAId;;AACD,GALD,EAKG,CAACc,QAAD,EAAWR,GAAX,CALH;AAOA,SAAO;AACLN,IAAAA,SAAS,EAATA,SADK;AAELC,IAAAA,YAAY,EAAZA,YAFK;AAGLa,IAAAA,QAAQ,EAARA,QAHK;AAILC,IAAAA,WAAW,EAAXA;AAJK,GAAP;AAMD",
  "sourcesContent": [
    "import { useEffect, useState } from 'react';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\nimport { TileLayerProps } from './';\n\nexport interface UseTileLayer extends TileLayerProps {}\n/**\n * https://lbsyun.baidu.com/jsdemo.htm#g0_2\n */\nexport function useTileLayer(props = {} as UseTileLayer) {\n  const [tileLayer, setTileLayer] = useState<BMap.TileLayer>();\n  const { transparentPng = true, tileUrlTemplate, copyright, zIndex } = props;\n  const { map } = useMapContext();\n\n  useEffect(() => {\n    if (map && !tileLayer) {\n      const instance = new BMap.TileLayer({\n        transparentPng,\n        tileUrlTemplate,\n        copyright,\n        zIndex,\n      });\n      if (!!props.getTilesUrl) {\n        instance.getTilesUrl = props.getTilesUrl;\n      }\n      if (!!props.getCopyright) {\n        instance.getCopyright = props.getCopyright;\n      }\n      map.addTileLayer(instance);\n      setTileLayer(instance);\n      return () => {\n        if (instance) {\n          map.removeTileLayer(instance);\n        }\n      };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map]);\n\n  const [visiable, setVisiable] = useState(props.visiable);\n  useEffect(() => {\n    if (map && tileLayer) {\n      visiable ? map.addTileLayer(tileLayer) : map.removeTileLayer(tileLayer);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [visiable, map]);\n\n  return {\n    tileLayer,\n    setTileLayer,\n    visiable,\n    setVisiable,\n  };\n}\n"
  ]
}