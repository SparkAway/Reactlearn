{
  "version": 3,
  "sources": [
    "../src/usePointCollection.ts"
  ],
  "names": [
    "useState",
    "useEffect",
    "useMapContext",
    "useProperties",
    "useVisiable",
    "useEventProperties",
    "EVENTS",
    "usePointCollection",
    "props",
    "shape",
    "color",
    "size",
    "map",
    "points",
    "setPoints",
    "pointCollection",
    "setPointCollection",
    "getPoints",
    "data",
    "result",
    "forEach",
    "item",
    "push",
    "BMap",
    "Point",
    "document",
    "createElement",
    "getContext",
    "opts",
    "BMAP_POINT_SIZE_SMALL",
    "BMAP_POINT_SHAPE_WATERDROP",
    "PointCollection",
    "addOverlay",
    "evnetName",
    "name",
    "replace",
    "toLowerCase",
    "addEventListener"
  ],
  "mappings": "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",
  "sourcesContent": [
    "import { useState, useEffect } from 'react';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\nimport { useProperties, useVisiable, useEventProperties } from '@uiw/react-baidu-map-utils';\nimport { PointCollectionProps } from './';\n\nconst EVENTS = ['onClick', 'onMouseOver', 'onMouseOut'];\n\nexport interface UsePointCollection extends PointCollectionProps {}\n\nexport function usePointCollection(props = {} as UsePointCollection) {\n  const { shape, color, size } = props;\n  const { map } = useMapContext();\n  const [points, setPoints] = useState(props.points);\n  const [pointCollection, setPointCollection] = useState<BMap.PointCollection>();\n\n  const getPoints = (data: [number, number][] = []) => {\n    const result: BMap.Point[] = [];\n    data.forEach((item) => {\n      result.push(new BMap.Point(item[0], item[1]));\n    });\n    return result;\n  };\n  useEffect(() => {\n    if (!BMap || !map) return;\n    // 判断当前浏览器是否支持绘制海量点\n    if (document && !document.createElement('canvas').getContext) return;\n    const opts = { shape, color, size };\n    if (!pointCollection) {\n      if (!opts.size) opts.size = BMAP_POINT_SIZE_SMALL;\n      if (!opts.shape) opts.shape = BMAP_POINT_SHAPE_WATERDROP;\n      if (!opts.color) opts.color = '#d340c3';\n      const pointCollection = new BMap.PointCollection(getPoints(points), opts);\n      // pointCollection.clear();\n      map.addOverlay(pointCollection);\n      setPointCollection(pointCollection);\n      EVENTS.forEach((evnetName) => {\n        if ((props as any)[evnetName]) {\n          const name = evnetName.replace(/^on/, '').toLowerCase();\n          pointCollection.addEventListener(name, (props as any)[evnetName]);\n        }\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map]);\n\n  useEffect(() => {\n    if (pointCollection && points) {\n      // pointCollection.clear();\n      pointCollection.setPoints(getPoints(points));\n    }\n  }, [points, pointCollection]);\n\n  useVisiable(pointCollection!, props);\n  useEventProperties<BMap.PointCollection, UsePointCollection>(pointCollection!, props, [\n    'onClick',\n    'onMouseOver',\n    'onMouseOut',\n  ]);\n  useProperties<BMap.PointCollection, UsePointCollection>(pointCollection!, props, ['Styles']);\n\n  return {\n    pointCollection,\n    setPointCollection,\n    points,\n    setPoints,\n  };\n}\n"
  ]
}