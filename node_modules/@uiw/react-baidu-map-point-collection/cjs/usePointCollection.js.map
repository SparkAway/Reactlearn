{
  "version": 3,
  "sources": [
    "../src/usePointCollection.ts"
  ],
  "names": [
    "EVENTS",
    "usePointCollection",
    "props",
    "shape",
    "color",
    "size",
    "map",
    "points",
    "setPoints",
    "pointCollection",
    "setPointCollection",
    "getPoints",
    "data",
    "result",
    "forEach",
    "item",
    "push",
    "BMap",
    "Point",
    "document",
    "createElement",
    "getContext",
    "opts",
    "BMAP_POINT_SIZE_SMALL",
    "BMAP_POINT_SHAPE_WATERDROP",
    "PointCollection",
    "addOverlay",
    "evnetName",
    "name",
    "replace",
    "toLowerCase",
    "addEventListener"
  ],
  "mappings": "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",
  "sourcesContent": [
    "import { useState, useEffect } from 'react';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\nimport { useProperties, useVisiable, useEventProperties } from '@uiw/react-baidu-map-utils';\nimport { PointCollectionProps } from './';\n\nconst EVENTS = ['onClick', 'onMouseOver', 'onMouseOut'];\n\nexport interface UsePointCollection extends PointCollectionProps {}\n\nexport function usePointCollection(props = {} as UsePointCollection) {\n  const { shape, color, size } = props;\n  const { map } = useMapContext();\n  const [points, setPoints] = useState(props.points);\n  const [pointCollection, setPointCollection] = useState<BMap.PointCollection>();\n\n  const getPoints = (data: [number, number][] = []) => {\n    const result: BMap.Point[] = [];\n    data.forEach((item) => {\n      result.push(new BMap.Point(item[0], item[1]));\n    });\n    return result;\n  };\n  useEffect(() => {\n    if (!BMap || !map) return;\n    // 判断当前浏览器是否支持绘制海量点\n    if (document && !document.createElement('canvas').getContext) return;\n    const opts = { shape, color, size };\n    if (!pointCollection) {\n      if (!opts.size) opts.size = BMAP_POINT_SIZE_SMALL;\n      if (!opts.shape) opts.shape = BMAP_POINT_SHAPE_WATERDROP;\n      if (!opts.color) opts.color = '#d340c3';\n      const pointCollection = new BMap.PointCollection(getPoints(points), opts);\n      // pointCollection.clear();\n      map.addOverlay(pointCollection);\n      setPointCollection(pointCollection);\n      EVENTS.forEach((evnetName) => {\n        if ((props as any)[evnetName]) {\n          const name = evnetName.replace(/^on/, '').toLowerCase();\n          pointCollection.addEventListener(name, (props as any)[evnetName]);\n        }\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map]);\n\n  useEffect(() => {\n    if (pointCollection && points) {\n      // pointCollection.clear();\n      pointCollection.setPoints(getPoints(points));\n    }\n  }, [points, pointCollection]);\n\n  useVisiable(pointCollection!, props);\n  useEventProperties<BMap.PointCollection, UsePointCollection>(pointCollection!, props, [\n    'onClick',\n    'onMouseOver',\n    'onMouseOut',\n  ]);\n  useProperties<BMap.PointCollection, UsePointCollection>(pointCollection!, props, ['Styles']);\n\n  return {\n    pointCollection,\n    setPointCollection,\n    points,\n    setPoints,\n  };\n}\n"
  ]
}