"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useCanvasLayer = useCanvasLayer;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = require("react");

var _reactBaiduMapMap = require("@uiw/react-baidu-map-map");

var _reactBaiduMapUtils = require("@uiw/react-baidu-map-utils");

function useCanvasLayer() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var zIndex = props.zIndex,
      paneName = props.paneName;

  var _useMapContext = (0, _reactBaiduMapMap.useMapContext)(),
      map = _useMapContext.map;

  var _useState = (0, _react.useState)(),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      canvasLayer = _useState2[0],
      setCanvasLayer = _useState2[1];

  (0, _react.useMemo)(function () {
    if (map && BMap && !canvasLayer) {
      var update = function update() {
        var self = this;
        props.update && props.update((0, _objectSpread2.default)((0, _objectSpread2.default)({}, self), {}, {
          BMap: BMap,
          map: map
        }));
      };

      var instance = new BMap.CanvasLayer({
        zIndex: zIndex,
        paneName: paneName,
        update: update
      });
      map.addOverlay(instance);
      setCanvasLayer(instance);
    } // eslint-disable-next-line react-hooks/exhaustive-deps

  }, [map, canvasLayer]);
  (0, _reactBaiduMapUtils.useVisiable)(canvasLayer, props);
  return {
    canvasLayer: canvasLayer,
    setCanvasLayer: setCanvasLayer
  };
}
//# sourceMappingURL=useCanvasLayer.js.map