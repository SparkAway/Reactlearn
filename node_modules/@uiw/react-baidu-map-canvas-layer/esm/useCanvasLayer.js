import _extends from "@babel/runtime/helpers/extends";
import { useState, useMemo } from 'react';
import { useMapContext } from '@uiw/react-baidu-map-map';
import { useVisiable } from '@uiw/react-baidu-map-utils';
export function useCanvasLayer(props) {
  if (props === void 0) {
    props = {};
  }

  var {
    zIndex,
    paneName
  } = props;
  var {
    map
  } = useMapContext();
  var [canvasLayer, setCanvasLayer] = useState();
  useMemo(() => {
    if (map && BMap && !canvasLayer) {
      var update = function update() {
        var self = this;
        props.update && props.update(_extends({}, self, {
          BMap,
          map
        }));
      };

      var instance = new BMap.CanvasLayer({
        zIndex,
        paneName,
        update
      });
      map.addOverlay(instance);
      setCanvasLayer(instance);
    } // eslint-disable-next-line react-hooks/exhaustive-deps

  }, [map, canvasLayer]);
  useVisiable(canvasLayer, props);
  return {
    canvasLayer,
    setCanvasLayer
  };
}
//# sourceMappingURL=useCanvasLayer.js.map