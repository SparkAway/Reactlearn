{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "React",
    "useEffect",
    "useImperativeHandle",
    "useInfoWindow",
    "forwardRef",
    "props",
    "ref",
    "infoWindow",
    "setIsOpen",
    "isOpen"
  ],
  "mappings": ";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,mBAA3B,QAAsD,OAAtD;AAEA,SAASC,aAAT,QAA8B,iBAA9B;AAEA,cAAc,iBAAd;AAwBA,4BAAeH,KAAK,CAACI,UAAN,CAAsF,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACnH,MAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA4BL,aAAa,CAACE,KAAD,CAA/C;AAEAJ,EAAAA,SAAS,CAAC,MAAMO,SAAS,CAACH,KAAK,CAACI,MAAP,CAAhB,EAAiC,CAACJ,KAAK,CAACI,MAAP,CAAjC,CAAT;AACAP,EAAAA,mBAAmB,CAACI,GAAD,EAAM,mBAAYD,KAAZ;AAAmBE,IAAAA;AAAnB,IAAN,CAAnB;AACA,SAAO,IAAP;AACD,CANc,CAAf",
  "sourcesContent": [
    "import React, { useEffect, useImperativeHandle } from 'react';\nimport { OverlayProps } from '@uiw/react-baidu-map-map';\nimport { useInfoWindow } from './useInfoWindow';\n\nexport * from './useInfoWindow';\n\nexport interface InfoWindowProps extends OverlayProps, Omit<BMap.InfoWindowOptions, 'title'>, BMap.InfoWindowEvent {\n  /**\n   * 窗口是否打开\n   * @default true\n   */\n  isOpen?: boolean;\n  /** 窗口位置经纬度 */\n  position: BMap.Point;\n  /** 展示文本内容，支持 HTML 内容字符串 */\n  content?: string | HTMLElement;\n  /** 信息窗标题文字 */\n  title?: string | HTMLElement | JSX.Element;\n  /**\n   * 信息窗口最大化时所显示内容，支持HTML内容\n   */\n  maxContent?: string;\n  /**\n   * 展示文本内容，类似于 content\n   */\n  children?: JSX.Element;\n}\n\nexport default React.forwardRef<InfoWindowProps & { infoWindow?: BMap.InfoWindow }, InfoWindowProps>((props, ref) => {\n  const { infoWindow, setIsOpen } = useInfoWindow(props);\n\n  useEffect(() => setIsOpen(props.isOpen!), [props.isOpen]);\n  useImperativeHandle(ref, () => ({ ...props, infoWindow }));\n  return null;\n});\n"
  ]
}