{
  "version": 3,
  "sources": [
    "../src/useMapTypeControl.tsx"
  ],
  "names": [
    "useMapTypeControl",
    "props",
    "mapTypeControl",
    "setMapTypeControl",
    "anchor",
    "offset",
    "type",
    "mapTypes",
    "map",
    "instance",
    "BMap",
    "MapTypeControl",
    "BMAP_ANCHOR_TOP_LEFT",
    "addControl",
    "removeControl"
  ],
  "mappings": ";;;;;;;;;;;AAAA;;AACA;;AACA;;AAKO,SAASA,iBAAT,GAA4D;AAAA,MAAjCC,KAAiC,uEAAzB,EAAyB;;AACjE,kBAA4C,sBAA5C;AAAA;AAAA,MAAOC,cAAP;AAAA,MAAuBC,iBAAvB;;AACA,MAAQC,MAAR,GAA2CH,KAA3C,CAAQG,MAAR;AAAA,MAAgBC,MAAhB,GAA2CJ,KAA3C,CAAgBI,MAAhB;AAAA,MAAwBC,IAAxB,GAA2CL,KAA3C,CAAwBK,IAAxB;AAAA,MAA8BC,QAA9B,GAA2CN,KAA3C,CAA8BM,QAA9B;;AACA,uBAAgB,sCAAhB;AAAA,MAAQC,GAAR,kBAAQA,GAAR;;AACA,wBAAU,YAAM;AACd,QAAIA,GAAG,IAAI,CAACN,cAAZ,EAA4B;AAC1B,UAAMO,QAAQ,GAAG,IAAIC,IAAI,CAACC,cAAT,CAAwB;AACvCP,QAAAA,MAAM,EAAEA,MAAM,IAAIQ,oBADqB;AAEvCP,QAAAA,MAAM,EAANA,MAFuC;AAGvCC,QAAAA,IAAI,EAAJA,IAHuC;AAIvCC,QAAAA,QAAQ,EAARA;AAJuC,OAAxB,CAAjB;AAMAC,MAAAA,GAAG,CAACK,UAAJ,CAAeJ,QAAf;AACAN,MAAAA,iBAAiB,CAACM,QAAD,CAAjB;AACA,aAAO,YAAM;AACXD,QAAAA,GAAG,CAACM,aAAJ,CAAkBL,QAAlB;AACD,OAFD;AAGD,KAba,CAcd;;AACD,GAfD,EAeG,CAACD,GAAD,CAfH;AAiBA,uCAAYN,cAAZ,EAA6BD,KAA7B;AACA,yCAAsDC,cAAtD,EAAuED,KAAvE,EAA8E,CAAC,QAAD,EAAW,QAAX,EAAqB,MAArB,CAA9E;AACA,SAAO;AACLC,IAAAA,cAAc,EAAdA,cADK;AAELC,IAAAA,iBAAiB,EAAjBA;AAFK,GAAP;AAID",
  "sourcesContent": [
    "import { useEffect, useState } from 'react';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\nimport { useProperties, useVisiable } from '@uiw/react-baidu-map-utils';\nimport { MapTypeControlProps } from './';\n\nexport interface UseMapTypeControl extends MapTypeControlProps {}\n\nexport function useMapTypeControl(props = {} as UseMapTypeControl) {\n  const [mapTypeControl, setMapTypeControl] = useState<BMap.MapTypeControl>();\n  const { anchor, offset, type, mapTypes } = props;\n  const { map } = useMapContext();\n  useEffect(() => {\n    if (map && !mapTypeControl) {\n      const instance = new BMap.MapTypeControl({\n        anchor: anchor || BMAP_ANCHOR_TOP_LEFT,\n        offset,\n        type,\n        mapTypes,\n      });\n      map.addControl(instance);\n      setMapTypeControl(instance);\n      return () => {\n        map.removeControl(instance);\n      };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map]);\n\n  useVisiable(mapTypeControl!, props);\n  useProperties<BMap.MapTypeControl, UseMapTypeControl>(mapTypeControl!, props, ['Anchor', 'Offset', 'Unit']);\n  return {\n    mapTypeControl,\n    setMapTypeControl,\n  };\n}\n"
  ]
}