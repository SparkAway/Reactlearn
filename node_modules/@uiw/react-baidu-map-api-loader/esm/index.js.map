{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "React",
    "requireScript",
    "delay",
    "time",
    "Promise",
    "resolve",
    "reject",
    "window",
    "setTimeout",
    "DEFAULT_RETRY_TIME",
    "APILoader",
    "Component",
    "ready",
    "BMap",
    "Map",
    "BMapGL",
    "res",
    "rej",
    "waitQueue",
    "push",
    "constructor",
    "props",
    "isMountedOk",
    "handleError",
    "error",
    "setState",
    "finish",
    "type",
    "loaded",
    "state",
    "akay",
    "TypeError",
    "componentDidMount",
    "callbackName",
    "loadMap",
    "componentWillUnmount",
    "render",
    "children",
    "fallback",
    "color",
    "message",
    "getScriptSrc",
    "cfg",
    "protocol",
    "location",
    "indexOf",
    "args",
    "version",
    "hostAndPath",
    "join",
    "src",
    "queue",
    "forEach",
    "task",
    "i",
    "err",
    "Error",
    "defaultProps"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/**\n * 初始化和加载baidu地图\n */\nimport React from 'react';\nimport { requireScript } from '@uiw/react-baidu-map-utils';\n\ndeclare global {\n  interface Window {\n    [index: string]: () => any; // or just any\n  }\n}\n\nexport interface APILoaderConfig {\n  /**\n   * akay 密钥\n   * 您需先申请密钥（ak）才可使用该服务，接口无使用次数限制，请开发者放心使用。\n   * 文档说明地址：http://lbsyun.baidu.com/index.php?title=jspopular3.0/guide/getkey\n   * 申请秘钥地址：http://lbs.baidu.com/apiconsole/key?application=key\n   */\n  akay: string;\n  /**\n   * SDK 包版本\n   * @default 3.0\n   */\n  version?: string;\n  /**\n   * 协议，默认是根据当前网站协议的\n   */\n  protocol?: 'http' | 'https';\n  /**\n   * 请求 SDK 的前半部分\n   * http://api.map.baidu.com/api?v=2.0&ak=E480562045\n   * @default api.map.baidu.com/api\n   */\n  hostAndPath?: string;\n  /**\n   * JSONP 回调函数\n   */\n  callbackName?: string;\n  /**\n   * 百度地图JavaScript API GL v1.0是一套由JavaScript语言编写的应用程序接口，可帮助您在网站中构建功能丰富、交互性强的地图应用，支持PC端和移动端基于浏览器的地图应用开发，且支持HTML5特性的地图开发。\n   * JavaScript API GL使用了WebGL对地图、覆盖物等进行渲染，支持3D视角展示地图。 GL版本接口基本向下兼容，迁移成本低。目前v1.0版本支持了基本的3D地图展示、基本地图控件和覆盖物。\n   */\n  type?: 'webgl';\n}\n\nexport function delay(time: number): Promise<undefined> {\n  return new Promise((resolve, reject) => {\n    window && window.setTimeout(resolve, time);\n  });\n}\n\nexport interface APILoaderProps extends APILoaderConfig {\n  /**\n   * 用于展示加载中或错误状态\n   */\n  fallback?: (error?: Error) => React.ReactNode;\n}\n\ninterface State {\n  loaded: boolean;\n  error?: Error;\n}\n\nconst DEFAULT_RETRY_TIME = 3;\n\n/**\n * APILoader 用于加载百度地图依赖\n */\nexport default class APILoader extends React.Component<APILoaderProps, State> {\n  public static defaultProps = {\n    akay: '',\n    hostAndPath: 'api.map.baidu.com/api',\n    version: '3.0',\n    callbackName: 'load_bmap_sdk',\n    type: '',\n  };\n\n  private isMountedOk: boolean = false;\n\n  /**\n   * 全局可能存在多个Loader同时渲染, 但是只能由一个负责加载\n   */\n  private static waitQueue: Array<[Function, Function]> = [];\n  /**\n   * 等待BMap就绪\n   */\n  public static async ready() {\n    if (window && window.BMap.Map) {\n      return;\n    }\n    if (window && window.BMapGL.Map) {\n      return;\n    }\n    return new Promise((res, rej) => {\n      APILoader.waitQueue.push([res, rej]);\n    });\n  }\n  public constructor(props: APILoaderProps) {\n    super(props);\n    this.state = {\n      loaded:\n        props.type === 'webgl'\n          ? window && !!window.BMapGL && !!window.BMapGL.Map\n          : window && !!window.BMap && !!window.BMap.Map,\n    };\n    if (this.props.akay == null) {\n      throw new TypeError('BaiDuMap: akay is required');\n    }\n  }\n\n  public componentDidMount() {\n    this.isMountedOk = true;\n    const { callbackName } = this.props;\n    if (!window || !callbackName) {\n      return;\n    }\n    if (\n      (this.props.type === 'webgl' && window && window.BMapGL && !window.BMapGL.Map) ||\n      (this.props.type === 'webgl' && window && !window.BMapGL) ||\n      (window && window.BMap && !window.BMap.Map) ||\n      (window && !window.BMap)\n    ) {\n      if (window && window[callbackName]) {\n        APILoader.waitQueue.push([this.finish, this.handleError]);\n        return;\n      }\n\n      this.loadMap();\n    }\n  }\n\n  componentWillUnmount() {\n    this.isMountedOk = false;\n  }\n\n  public render() {\n    return this.state.loaded ? (\n      this.props.children\n    ) : this.props.fallback ? (\n      this.props.fallback(this.state.error)\n    ) : this.state.error ? (\n      <div style={{ color: 'red' }}>{this.state.error.message}</div>\n    ) : null;\n  }\n\n  private getScriptSrc() {\n    const cfg = this.props;\n    let protocol = (cfg.protocol || window.location.protocol) as APILoaderConfig['protocol'];\n    if (protocol!.indexOf(':') === -1) {\n      protocol += ':';\n    }\n    const args = [`v=${cfg.version}`, `ak=${cfg.akay}`, `callback=${cfg.callbackName}`];\n    if (cfg.type) {\n      args.push(`type=${cfg.type}`);\n    }\n    return `${protocol}//${cfg.hostAndPath}?${args.join('&')}`;\n  }\n  /**\n   * load BaiduMap in script tag\n   */\n  private async loadMap() {\n    const { callbackName } = this.props;\n    if (!window || !callbackName) {\n      return;\n    }\n    const src = this.getScriptSrc();\n    window[callbackName] = () => {\n      // flush queue\n      const queue = APILoader.waitQueue;\n      APILoader.waitQueue = [];\n      queue.forEach((task) => task[0]());\n      this.finish();\n    };\n\n    for (let i = 0; i < DEFAULT_RETRY_TIME; i++) {\n      try {\n        await requireScript(src);\n        break;\n      } catch (error: any) {\n        if (i === DEFAULT_RETRY_TIME - 1) {\n          const err = new Error(`Failed to load Baidu Map: ${error.message}`);\n          // flush queue\n          const queue = APILoader.waitQueue;\n          APILoader.waitQueue = [];\n          queue.forEach((task) => task[1](err));\n          this.handleError(err);\n          return;\n        }\n        await delay(i * 1000);\n      }\n    }\n  }\n\n  private handleError = (error: Error) => {\n    if (this.isMountedOk) {\n      this.setState({ error });\n    }\n  };\n\n  private finish = () => {\n    if (window && this.props.type === 'webgl') {\n      window.BMap = window.BMapGL as any;\n    }\n    if (this.isMountedOk) {\n      this.setState({\n        loaded: true,\n      });\n    }\n  };\n}\n"
  ]
}