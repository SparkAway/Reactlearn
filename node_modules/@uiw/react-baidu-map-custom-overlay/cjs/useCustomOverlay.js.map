{
  "version": 3,
  "sources": [
    "../src/useCustomOverlay.tsx"
  ],
  "names": [
    "getCustomOverlay",
    "elm",
    "position",
    "paneName",
    "map",
    "panes",
    "getPanes",
    "container",
    "style",
    "appendChild",
    "pointToOverlayPixel",
    "offset",
    "width",
    "height",
    "left",
    "x",
    "top",
    "y",
    "draw",
    "visiable",
    "display",
    "index",
    "zIndex",
    "toString",
    "BMap",
    "Overlay",
    "useCustomOverlay",
    "props",
    "children",
    "customOverlay",
    "setCustomOverlay",
    "div",
    "setDiv",
    "portal",
    "setPortal",
    "count",
    "setCount",
    "removeOverlay",
    "document",
    "createElement",
    "CustomOverlay",
    "portalInstance",
    "ReactDOM",
    "createPortal",
    "CompOverlay",
    "addOverlay",
    "prevCount"
  ],
  "mappings": "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",
  "sourcesContent": [
    "import { useState, useMemo, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\nimport { useProperties, usePrevious } from '@uiw/react-baidu-map-utils';\nimport { CustomOverlayProps } from './';\n\nfunction getCustomOverlay() {\n  return class extends BMap.Overlay {\n    public container: HTMLDivElement;\n    public map!: BMap.Map;\n    public paneName: keyof BMap.MapPanes;\n    public position?: BMap.Point;\n    public offset?: BMap.Size;\n    constructor(elm: HTMLDivElement, position?: BMap.Point, paneName?: CustomOverlayProps['paneName']) {\n      super();\n      this.container = elm;\n      this.paneName = paneName || 'markerPane';\n      this.position = position;\n    }\n    public initialize: (map: BMap.Map) => HTMLElement = (map) => {\n      const panes = map.getPanes();\n      this.container.style.position = 'absolute';\n      this.map = map;\n      panes[this.paneName]!.appendChild(this.container);\n      return this.container;\n    };\n    public draw = () => {\n      if (this.position == null || this.map == null) {\n        return;\n      }\n      const position = this.map.pointToOverlayPixel(this.position);\n      const { width = 0, height = 0 } = this.offset || {};\n\n      this.container.style.left = `${position.x + width}px`;\n      this.container.style.top = `${position.y + height}px`;\n    };\n    public setOffset = (offset: BMap.Size) => {\n      this.offset = offset;\n      this.draw();\n    };\n    public setPosition = (position: BMap.Point) => {\n      this.position = position;\n      this.draw();\n    };\n    public setVisiable = (visiable: boolean) => {\n      this.container.style.display = visiable ? 'block' : 'none';\n    };\n\n    public getPosition = () => {\n      return this.position;\n    };\n\n    public setZIndex = (index: number) => {\n      this.container.style.zIndex = index.toString();\n    };\n  };\n}\n\nexport interface UseCustomOverlay extends CustomOverlayProps {}\n\nexport function useCustomOverlay(props = {} as UseCustomOverlay) {\n  const { children, paneName, position } = props;\n  const { map } = useMapContext();\n  const [customOverlay, setCustomOverlay] = useState<BMap.Overlay>();\n  const [div, setDiv] = useState<HTMLDivElement>();\n  const [portal, setPortal] = useState<React.ReactPortal>();\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    return () => {\n      if (map && customOverlay) {\n        map.removeOverlay(customOverlay);\n      }\n    };\n  }, [customOverlay, map]);\n  useMemo(() => {\n    if (map && !portal && document) {\n      const elm = document.createElement('div');\n      const CustomOverlay = getCustomOverlay();\n      const portalInstance = ReactDOM.createPortal(children, elm);\n      const CompOverlay = new CustomOverlay(elm, position, paneName);\n      setCount(count + 1);\n      setDiv(elm);\n      map.addOverlay(CompOverlay);\n      setPortal(portalInstance);\n      setCustomOverlay(CompOverlay);\n    }\n  }, [children, count, map, paneName, portal, position]);\n\n  const prevCount = usePrevious(count);\n  useMemo(() => {\n    if (map && div && children && count === prevCount) {\n      const portalInstance = ReactDOM.createPortal(children, div);\n      setPortal(portalInstance);\n      setCount(count + 1);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [children, customOverlay]);\n\n  useProperties<BMap.Overlay, UseCustomOverlay>(customOverlay!, props, ['ZIndex', 'Offset', 'Position', 'Visiable']);\n  return {\n    portal,\n    setPortal,\n    customOverlay,\n    setCustomOverlay,\n  };\n}\n"
  ]
}