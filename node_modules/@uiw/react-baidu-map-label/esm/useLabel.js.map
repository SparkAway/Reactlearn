{
  "version": 3,
  "sources": [
    "../src/useLabel.ts"
  ],
  "names": [
    "useEffect",
    "useState",
    "useRenderDom",
    "useEnableProperties",
    "useProperties",
    "useVisiable",
    "useEventProperties",
    "useMapContext",
    "useLabel",
    "props",
    "label",
    "setLabel",
    "offset",
    "style",
    "content",
    "position",
    "enableMassClear",
    "container",
    "children",
    "map",
    "BMap",
    "opts",
    "instance",
    "Label",
    "innerHTML",
    "setStyle",
    "addOverlay",
    "removeOverlay",
    "setContent"
  ],
  "mappings": ";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SACEC,YADF,EAEEC,mBAFF,EAGEC,aAHF,EAIEC,WAJF,EAKEC,kBALF,QAMO,4BANP;AAOA,SAASC,aAAT,QAA8B,0BAA9B;AAKA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAA0C;AAAA,MAAxBA,KAAwB;AAAxBA,IAAAA,KAAwB,GAAhB,EAAgB;AAAA;;AAC/C,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,EAAlC;AACA,MAAM;AAAEW,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA,OAAO,GAAG,EAA3B;AAA+BC,IAAAA,QAA/B;AAAyCC,IAAAA;AAAzC,MAA6DP,KAAnE;AACA,MAAM;AAAEQ,IAAAA;AAAF,MAAgBf,YAAY,CAAC;AAAEgB,IAAAA,QAAQ,EAAET,KAAK,CAACS;AAAlB,GAAD,CAAlC;AACA,MAAM;AAAEC,IAAAA;AAAF,MAAUZ,aAAa,EAA7B;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACoB,IAAD,IAAS,CAACD,GAAd,EAAmB;;AACnB,QAAI,CAACT,KAAL,EAAY;AACV,UAAMW,IAAI,GAAG;AAAET,QAAAA,MAAF;AAAUG,QAAAA,QAAV;AAAoBC,QAAAA;AAApB,OAAb;AACA,UAAMM,QAAQ,GAAG,IAAIF,IAAI,CAACG,KAAT,CAAed,KAAK,CAACS,QAAN,GAAiBD,SAAS,CAACO,SAA3B,GAAuCV,OAAtD,EAA+DO,IAA/D,CAAjB;AACAC,MAAAA,QAAQ,CAACG,QAAT,cAAuBZ,KAAvB;AACAM,MAAAA,GAAG,CAACO,UAAJ,CAAeJ,QAAf;AACAX,MAAAA,QAAQ,CAACW,QAAD,CAAR;AACD;;AACD,WAAO,MAAM;AACX,UAAIH,GAAG,IAAIT,KAAX,EAAkB;AAChBS,QAAAA,GAAG,CAACQ,aAAJ,CAAkBjB,KAAlB;AACD;AACF,KAJD,CATc,CAcd;AACD,GAfQ,EAeN,CAACS,GAAD,CAfM,CAAT;AAiBAnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,KAAJ,EAAW;AACTA,MAAAA,KAAK,CAACkB,UAAN,CAAiBnB,KAAK,CAACS,QAAN,GAAiBD,SAAS,CAACO,SAA3B,GAAuCV,OAAxD;AACD;AACF,GAJQ,EAIN,CAACL,KAAK,CAACS,QAAP,EAAiBD,SAAjB,EAA4BP,KAA5B,CAJM,CAAT;AAMAL,EAAAA,WAAW,CAACK,KAAD,EAASD,KAAT,CAAX;AACAH,EAAAA,kBAAkB,CAAuBI,KAAvB,EAA+BD,KAA/B,EAAsC,CACtD,OADsD,EAEtD,UAFsD,EAGtD,SAHsD,EAItD,SAJsD,EAKtD,WALsD,EAMtD,QANsD,EAOtD,QAPsD,EAQtD,YARsD,CAAtC,CAAlB;AAUAL,EAAAA,aAAa,CAAuBM,KAAvB,EAA+BD,KAA/B,EAAsC,CAAC,OAAD,EAAU,UAAV,EAAsB,QAAtB,EAAgC,OAAhC,EAAyC,QAAzC,CAAtC,CAAb;AACAN,EAAAA,mBAAmB,CAAuBO,KAAvB,EAA+BD,KAA/B,EAAsC,CAAC,WAAD,CAAtC,CAAnB;AAEA,SAAO;AACLC,IAAAA,KADK;AAELC,IAAAA;AAFK,GAAP;AAID",
  "sourcesContent": [
    "import { useEffect, useState } from 'react';\nimport {\n  useRenderDom,\n  useEnableProperties,\n  useProperties,\n  useVisiable,\n  useEventProperties,\n} from '@uiw/react-baidu-map-utils';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\nimport { LabelProps } from './';\n\nexport interface UseLabel extends LabelProps {}\n\nexport function useLabel(props = {} as UseLabel) {\n  const [label, setLabel] = useState<BMap.Label>();\n  const { offset, style, content = '', position, enableMassClear } = props;\n  const { container } = useRenderDom({ children: props.children });\n  const { map } = useMapContext();\n\n  useEffect(() => {\n    if (!BMap || !map) return;\n    if (!label) {\n      const opts = { offset, position, enableMassClear };\n      const instance = new BMap.Label(props.children ? container.innerHTML : content, opts);\n      instance.setStyle({ ...style });\n      map.addOverlay(instance);\n      setLabel(instance);\n    }\n    return () => {\n      if (map && label) {\n        map.removeOverlay(label);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map]);\n\n  useEffect(() => {\n    if (label) {\n      label.setContent(props.children ? container.innerHTML : content);\n    }\n  }, [props.children, container, label]);\n\n  useVisiable(label!, props);\n  useEventProperties<BMap.Label, UseLabel>(label!, props, [\n    'Click',\n    'DblClick',\n    'MouseDo',\n    'MouseUp',\n    'MouseOout',\n    'MouseO',\n    'Remove',\n    'RightClick',\n  ]);\n  useProperties<BMap.Label, UseLabel>(label!, props, ['Style', 'Position', 'Offset', 'Title', 'ZIndex']);\n  useEnableProperties<BMap.Label, UseLabel>(label!, props, ['MassClear']);\n\n  return {\n    label,\n    setLabel,\n  };\n}\n"
  ]
}