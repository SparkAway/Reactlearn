{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "React",
    "useImperativeHandle",
    "useLabel",
    "forwardRef",
    "props",
    "ref",
    "label"
  ],
  "mappings": ";AAAA,OAAOA,KAAP,IAA+BC,mBAA/B,QAA0D,OAA1D;AAEA,SAASC,QAAT,QAAyB,YAAzB;AAEA,cAAc,YAAd;AAiBA,4BAAeF,KAAK,CAACG,UAAN,CAAkE,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC/F,MAAM;AAAEC,IAAAA;AAAF,MAAYJ,QAAQ,cAAME,KAAN,EAA1B;AACAH,EAAAA,mBAAmB,CAACI,GAAD,EAAM,mBAAYD,KAAZ;AAAmBE,IAAAA;AAAnB,IAAN,EAAmC,CAACA,KAAD,EAAQF,KAAR,CAAnC,CAAnB;AACA,SAAO,IAAP;AACD,CAJc,CAAf",
  "sourcesContent": [
    "import React, { CSSProperties, useImperativeHandle } from 'react';\nimport { OverlayProps } from '@uiw/react-baidu-map-map';\nimport { useLabel } from './useLabel';\n\nexport * from './useLabel';\n\nexport interface LabelProps extends OverlayProps, BMap.LabelOptions, BMap.LabelEvents {\n  /**\n   * 文本标注内容\n   */\n  content?: string;\n  /**\n   * 文本标注样式，该样式将作用于文本标注的容器元素上。\n   * 其中styles为JavaScript对象常量，比如： setStyle({ color : \"red\", fontSize : \"12px\" })\n   * 注意：如果css的属性名中包含连字符，需要将连字符去掉并将其后的字母进行大写处理，\n   * 例如：背景色属性要写成：backgroundColor\n   */\n  style?: CSSProperties;\n  children?: JSX.Element;\n}\n\nexport default React.forwardRef<LabelProps & { label?: BMap.Label }, LabelProps>((props, ref) => {\n  const { label } = useLabel({ ...props });\n  useImperativeHandle(ref, () => ({ ...props, label }), [label, props]);\n  return null;\n});\n"
  ]
}