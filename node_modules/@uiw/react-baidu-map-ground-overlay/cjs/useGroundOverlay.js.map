{
  "version": 3,
  "sources": [
    "../src/useGroundOverlay.ts"
  ],
  "names": [
    "useGroundOverlay",
    "props",
    "groundOverlay",
    "setGroundOverlay",
    "bounds",
    "opacity",
    "imageURL",
    "displayOnMinLevel",
    "displayOnMaxLevel",
    "map",
    "instance",
    "BMap",
    "GroundOverlay",
    "addOverlay",
    "removeOverlay"
  ],
  "mappings": ";;;;;;;;;;;AAAA;;AACA;;AACA;;AAKO,SAASA,gBAAT,GAA0D;AAAA,MAAhCC,KAAgC,uEAAxB,EAAwB;;AAC/D,kBAA0C,sBAA1C;AAAA;AAAA,MAAOC,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,MAAQC,MAAR,GAA4EH,KAA5E,CAAQG,MAAR;AAAA,MAAgBC,OAAhB,GAA4EJ,KAA5E,CAAgBI,OAAhB;AAAA,MAAyBC,QAAzB,GAA4EL,KAA5E,CAAyBK,QAAzB;AAAA,MAAmCC,iBAAnC,GAA4EN,KAA5E,CAAmCM,iBAAnC;AAAA,MAAsDC,iBAAtD,GAA4EP,KAA5E,CAAsDO,iBAAtD;;AACA,uBAAgB,sCAAhB;AAAA,MAAQC,GAAR,kBAAQA,GAAR;;AACA,wBAAU,YAAM;AACd,QAAI,CAACP,aAAD,IAAkBE,MAAlB,IAA4BK,GAAhC,EAAqC;AACnC,UAAMC,QAAQ,GAAG,IAAIC,IAAI,CAACC,aAAT,CAAuBR,MAAvB,EAA+B;AAC9CC,QAAAA,OAAO,EAAPA,OAD8C;AAE9CC,QAAAA,QAAQ,EAARA,QAF8C;AAG9CC,QAAAA,iBAAiB,EAAjBA,iBAH8C;AAI9CC,QAAAA,iBAAiB,EAAjBA;AAJ8C,OAA/B,CAAjB;AAMAC,MAAAA,GAAG,CAACI,UAAJ,CAAeH,QAAf;AACAP,MAAAA,gBAAgB,CAACO,QAAD,CAAhB;AACA,aAAO,YAAM;AACX,YAAID,GAAG,IAAIC,QAAX,EAAqB;AACnBD,UAAAA,GAAG,CAACK,aAAJ,CAAkBJ,QAAlB;AACD;AACF,OAJD;AAKD,KAfa,CAgBd;;AACD,GAjBD,EAiBG,CAACD,GAAD,CAjBH;AAmBA,uCAAYP,aAAZ,EAA4BD,KAA5B;AACA,8CAAyDC,aAAzD,EAAyED,KAAzE,EAAgF,CAAC,OAAD,EAAU,UAAV,CAAhF;AACA,yCAAoDC,aAApD,EAAoED,KAApE,EAA2E,CACzE,QADyE,EAEzE,SAFyE,EAGzE,UAHyE,EAIzE,mBAJyE,EAKzE,mBALyE,CAA3E;AAQA,SAAO;AACLC,IAAAA,aAAa,EAAbA,aADK;AAELC,IAAAA,gBAAgB,EAAhBA;AAFK,GAAP;AAID",
  "sourcesContent": [
    "import { useEffect, useState } from 'react';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\nimport { useProperties, useVisiable, useEventProperties } from '@uiw/react-baidu-map-utils';\nimport { GroundOverlayProps } from './';\n\nexport interface UseGroundOverlay extends GroundOverlayProps {}\n\nexport function useGroundOverlay(props = {} as UseGroundOverlay) {\n  const [groundOverlay, setGroundOverlay] = useState<BMap.GroundOverlay>();\n  const { bounds, opacity, imageURL, displayOnMinLevel, displayOnMaxLevel } = props;\n  const { map } = useMapContext();\n  useEffect(() => {\n    if (!groundOverlay && bounds && map) {\n      const instance = new BMap.GroundOverlay(bounds, {\n        opacity,\n        imageURL,\n        displayOnMinLevel,\n        displayOnMaxLevel,\n      });\n      map.addOverlay(instance);\n      setGroundOverlay(instance);\n      return () => {\n        if (map && instance) {\n          map.removeOverlay(instance);\n        }\n      };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map]);\n\n  useVisiable(groundOverlay!, props);\n  useEventProperties<BMap.GroundOverlay, UseGroundOverlay>(groundOverlay!, props, ['Click', 'DblClick']);\n  useProperties<BMap.GroundOverlay, UseGroundOverlay>(groundOverlay!, props, [\n    'Bounds',\n    'Opacity',\n    'ImageURL',\n    'DisplayOnMinLevel',\n    'DispalyOnMaxLevel',\n  ]);\n\n  return {\n    groundOverlay,\n    setGroundOverlay,\n  };\n}\n"
  ]
}