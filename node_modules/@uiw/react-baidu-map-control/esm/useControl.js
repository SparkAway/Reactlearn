import { useState, useEffect } from 'react';
import { useMapContext } from '@uiw/react-baidu-map-map';
import { useProperties, useVisiable, useRenderDom } from '@uiw/react-baidu-map-utils';
import getControl from './getControl';
export function useControl(props) {
  if (props === void 0) {
    props = {};
  }

  var {
    container
  } = useRenderDom({
    children: props.children
  });
  var [control, setControl] = useState();
  var {
    offset,
    anchor
  } = props;
  var {
    map
  } = useMapContext();
  useEffect(() => {
    if (map && !control && props.children) {
      var _Control = getControl();

      var instance = new _Control(container, anchor, offset);
      setControl(instance);
      map.addOverlay(instance);
    }

    return () => {
      if (map && control) () => {
        map.removeControl(control);
      };
    };
  }, [map, control, anchor, offset, container, props.children]);
  useVisiable(control, props);
  useProperties(control, props, ['Anchor', 'Offset']);
  return {
    control,
    setControl
  };
}
//# sourceMappingURL=useControl.js.map