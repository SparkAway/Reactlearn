"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useControl = useControl;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = require("react");

var _reactBaiduMapMap = require("@uiw/react-baidu-map-map");

var _reactBaiduMapUtils = require("@uiw/react-baidu-map-utils");

var _getControl = _interopRequireDefault(require("./getControl"));

function useControl() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var _useRenderDom = (0, _reactBaiduMapUtils.useRenderDom)({
    children: props.children
  }),
      container = _useRenderDom.container;

  var _useState = (0, _react.useState)(),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      control = _useState2[0],
      setControl = _useState2[1];

  var offset = props.offset,
      anchor = props.anchor;

  var _useMapContext = (0, _reactBaiduMapMap.useMapContext)(),
      map = _useMapContext.map;

  (0, _react.useEffect)(function () {
    if (map && !control && props.children) {
      var _Control = (0, _getControl.default)();

      var instance = new _Control(container, anchor, offset);
      setControl(instance);
      map.addOverlay(instance);
    }

    return function () {
      if (map && control) (function () {
        map.removeControl(control);
      });
    };
  }, [map, control, anchor, offset, container, props.children]);
  (0, _reactBaiduMapUtils.useVisiable)(control, props);
  (0, _reactBaiduMapUtils.useProperties)(control, props, ['Anchor', 'Offset']);
  return {
    control: control,
    setControl: setControl
  };
}
//# sourceMappingURL=useControl.js.map