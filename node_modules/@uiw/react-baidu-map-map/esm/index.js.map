{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "React",
    "useRef",
    "useEffect",
    "useImperativeHandle",
    "useReducer",
    "useMemo",
    "useMap",
    "Context",
    "reducer",
    "initialState",
    "Provider",
    "props",
    "state",
    "dispatch",
    "children",
    "forwardRef",
    "ref",
    "className",
    "style",
    "window",
    "BMap",
    "BMapGL",
    "elmRef",
    "setContainer",
    "container",
    "setCenter",
    "setAutoLocalCity",
    "map",
    "current",
    "center",
    "autoLocalCity",
    "childs",
    "Children",
    "toArray",
    "fontSize",
    "height",
    "child",
    "key",
    "isValidElement",
    "type",
    "cloneElement"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/// <reference types=\"@uiw/react-baidu-map-types\" />\nimport React, { useRef, useEffect, useImperativeHandle, useReducer, useMemo, CSSProperties } from 'react';\nimport { useMap } from './useMap';\nimport { Context, reducer, initialState } from './context';\n\nexport * from './useMap';\nexport * from './context';\n\nexport interface Control {\n  Control: BMap.Control;\n  NavigationControl: BMap.NavigationControlOptions;\n  OverviewMapControl: BMap.OverviewMapControlOptions;\n  ScaleControl: BMap.ScaleControlOptions;\n  MapTypeControl: BMap.MapTypeControlOptions;\n  CopyrightControl: BMap.CopyrightControlOptions;\n  GeolocationControl: BMap.GeolocationControlOptions;\n}\n\nexport type ControlOptions =\n  | {\n      name: keyof Control;\n      options?: (bmap: typeof BMap, map: BMap.Map) => void;\n      control?(bmap: typeof BMap, map: BMap.Map): BMap.Control;\n    }\n  | {\n      name: keyof Control;\n      options?: Control[keyof Control];\n      control?(bmap: typeof BMap, map: BMap.Map): BMap.Control;\n    };\n\nexport type ControlOptionsAll = keyof Control | ControlOptions;\n\nexport interface MapProps extends BMap.MapOptions, BMap.MapEvents {\n  className?: React.HTMLAttributes<HTMLDivElement>['className'];\n  style?: React.HTMLAttributes<HTMLDivElement>['style'];\n  /**\n   * 指定的容器\n   */\n  container?: HTMLDivElement | null | undefined;\n  /**\n   * 百度地图上负责与地图交互的UI元素称为控件。\n   */\n  widget?: (ControlOptionsAll | ControlOptions)[];\n  /**\n   * 缩放等级\n   */\n  zoom?: number;\n  /**\n   * 定位, 可使用如 `上海市` 的地区字符串，\n   * 也可以使用对象如 `{lng: 121.424333, lat: 31.228604}` 表示经纬度\n   */\n  center?: string | BMap.Point;\n  /**\n   * IP定位获取当前城市，进行自动定位\n   */\n  autoLocalCity?: boolean;\n  children?: React.ReactNode;\n  /** 设置地图默认的鼠标指针样式。参数cursor应符合CSS的cursor属性规范 */\n  defaultCursor?: CSSProperties['cursor'];\n  /**\n   * 启用地图拖拽，默认启用\n   */\n  enableDragging?: boolean;\n  /**\n   * 启用滚轮放大缩小，默认禁用\n   */\n  enableScrollWheelZoom?: boolean;\n  /**\n   * 启用双击放大，默认启用\n   */\n  enableDoubleClickZoom?: boolean;\n  /**\n   * 启用地图惯性拖拽，默认禁用\n   */\n  enableInertialDragging?: boolean;\n  /**\n   * 启用连续缩放效果，默认禁用\n   */\n  enableContinuousZoom?: boolean;\n  /**\n   * 启用双指操作缩放，默认启用\n   */\n  enablePinchToZoom?: boolean;\n  /**\n   * 启用键盘操作，默认禁用。键盘的上、下、左、右键可连续移动地图。同时按下其中两个键可使地图进行对角移动。\n   * PgUp、PgDn、Home和End键会使地图平移其1/2的大小。+、-键会使地图放大或缩小一级\n   */\n  enableKeyboard?: boolean;\n  /**\n   * 设置地图个性化样式V2版本，仅支持现代浏览器（支持Canvas）\n   */\n  mapStyleV2?: BMap.MapStyleV2;\n  /**\n   * 设置地图城市，注意当地图初始化时的类型设置为 `BMAP_NORMAL_MAP` 时，\n   * 需要在调用 `centerAndZoom` 之前调用此方法设置地图所在城市。\n   * 例如：\n   * @example\n   *\n   * ```js\n   * var map = new BMap.Map(“container”, { mapType: BMAP_NORMAL_MAP });\n   * map.setCurrentCity(“北京市”);\n   * map.centerAndZoom(new BMap.Point(116.404, 39.915), 18);\n   * ```\n   *\n   * 注意：初始化的坐标应与您设置的城市对应，否则地图将无法正常显示。\n   */\n  currentCity?: string;\n  /**\n   * 将全景实例与Map类进行绑定\n   */\n  panorama?: BMap.Panorama;\n\n  viewport?: (view: Array<BMap.Point> | BMap.Viewport, viewportOptions: BMap.ViewportOptions) => void;\n}\n\nexport type MapChildRenderProps =\n  | {\n      children?: (data: { BMap: typeof BMap; map: BMap.Map; container?: string | HTMLDivElement | null }) => void;\n    }\n  | { children?: React.ReactNode };\n\nexport function Provider(props: MapChildRenderProps) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return <Context.Provider value={{ state, dispatch }}>{props.children}</Context.Provider>;\n}\n\nexport default React.forwardRef<MapProps & { map?: BMap.Map }, MapProps & MapChildRenderProps>(\n  ({ className, style, children, ...props }, ref) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    window.BMap = window.BMap || window.BMapGL;\n    const elmRef = useRef<HTMLDivElement>(null);\n    const { setContainer, container, setCenter, setAutoLocalCity, map } = useMap({\n      container: elmRef.current,\n      ...props,\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(() => setContainer(elmRef.current), [elmRef.current]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useMemo(() => props.center && setCenter(props.center!), [props.center]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(() => setAutoLocalCity(props.autoLocalCity!), [props.autoLocalCity]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useImperativeHandle(ref, () => ({ ...props, map, BMap, container: elmRef.current }), [map]);\n    const childs = React.Children.toArray(children);\n    useEffect(() => {\n      if (map) {\n        dispatch({ map, container: elmRef.current, BMap });\n      }\n    }, [map]);\n    return (\n      <Context.Provider value={{ state, dispatch }}>\n        <div ref={elmRef} className={className} style={{ fontSize: 1, height: '100%', ...style }} />\n        {BMap && map && typeof children === 'function' && children({ BMap, map, container })}\n        {BMap &&\n          map &&\n          childs.map((child, key) => {\n            if (!React.isValidElement(child)) return null;\n            if (child.type && typeof child.type === 'string') {\n              return React.cloneElement(child, { key });\n            }\n            return React.cloneElement(child, {\n              ...child.props,\n              BMap,\n              map,\n              container,\n              key,\n            });\n          })}\n      </Context.Provider>\n    );\n  },\n);\n"
  ]
}