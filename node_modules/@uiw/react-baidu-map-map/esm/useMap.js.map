{
  "version": 3,
  "sources": [
    "../src/useMap.tsx"
  ],
  "names": [
    "useEffect",
    "useState",
    "useMemo",
    "useContext",
    "useEnableProperties",
    "useProperties",
    "useEventProperties",
    "Context",
    "useMap",
    "props",
    "widget",
    "minZoom",
    "maxZoom",
    "mapType",
    "enableHighResolution",
    "enableAutoResize",
    "enableMapClick",
    "map",
    "setMap",
    "zoom",
    "setZoom",
    "container",
    "setContainer",
    "dispatch",
    "BMap",
    "instance",
    "Map",
    "forEach",
    "item",
    "addControl",
    "control",
    "name",
    "options",
    "clearOverlays",
    "undefined",
    "center",
    "setCenter",
    "cent",
    "lng",
    "lat",
    "Point",
    "centerAndZoom",
    "autoLocalCity",
    "setAutoLocalCity",
    "myCity",
    "LocalCity",
    "get",
    "result",
    "level"
  ],
  "mappings": "AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,OAA9B,EAAuCC,UAAvC,QAAyD,OAAzD;AACA,SAASC,mBAAT,EAA8BC,aAA9B,EAA6CC,kBAA7C,QAAuE,4BAAvE;AAEA,SAASC,OAAT,QAAwB,WAAxB;AAyBA,OAAO,SAASC,MAAT,CAAgBC,KAAhB,EAAoC;AAAA,MAApBA,KAAoB;AAApBA,IAAAA,KAAoB,GAAJ,EAAI;AAAA;;AACzC,MAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA,OAA5B;AAAqCC,IAAAA,oBAArC;AAA2DC,IAAAA,gBAA3D;AAA6EC,IAAAA;AAA7E,MAAgGP,KAAtG;AACA,MAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBjB,QAAQ,EAA9B;AACA,MAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAACQ,KAAK,CAACU,IAAN,IAAc,EAAf,CAAhC;AACA,MAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAoCQ,KAAK,CAACY,SAA1C,CAA1C;AACA,MAAM;AAAEE,IAAAA;AAAF,MAAepB,UAAU,CAACI,OAAD,CAA/B;AACAL,EAAAA,OAAO,CAAC,MAAM;AACZ,QAAImB,SAAS,IAAI,CAACJ,GAAd,IAAqBO,IAAzB,EAA+B;AAC7B,UAAMC,QAAQ,GAAG,IAAID,IAAI,CAACE,GAAT,CAAaL,SAAb,EAAwB;AACvCV,QAAAA,OADuC;AAEvCC,QAAAA,OAFuC;AAGvCC,QAAAA,OAHuC;AAIvCC,QAAAA,oBAJuC;AAKvCC,QAAAA,gBALuC;AAMvCC,QAAAA;AANuC,OAAxB,CAAjB;AAQA;AACN;AACA;;AACMN,MAAAA,MAAM,IACJA,MAAM,CAACiB,OAAP,CAAgBC,IAAD,IAAU;AACvB,YAAI,CAACJ,IAAL,EAAW;AACT;AACD;;AACD,YAAI,OAAOI,IAAP,KAAgB,QAApB,EAA8B;AAC5BH,UAAAA,QAAQ,CAACI,UAAT,CAAoB,IAAKL,IAAI,CAACI,IAAD,CAAT,EAApB;AACD,SAFD,MAEO,IAAI,OAAOA,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,CAACE,OAAjC,IAA4C,OAAOF,IAAI,CAACE,OAAZ,KAAwB,UAAxE,EAAoF;AACzFL,UAAAA,QAAQ,CAACI,UAAT,CAAoBD,IAAI,CAACE,OAAL,CAAaN,IAAb,EAAmBC,QAAnB,CAApB;AACD,SAFM,MAEA,IAAI,OAAOG,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,CAACG,IAArC,EAA2C;AAChD,cAAMC,OAAO,GAAG,OAAOJ,IAAI,CAACI,OAAZ,KAAwB,UAAxB,GAAqCJ,IAAI,CAACI,OAAL,CAAaR,IAAb,EAAmBC,QAAnB,CAArC,GAAoEG,IAAI,CAACI,OAAzF;AACAP,UAAAA,QAAQ,CAACI,UAAT,CAAoB,IAAKL,IAAI,CAACI,IAAI,CAACG,IAAN,CAAT,CAA6BC,OAA7B,CAApB;AACD;AACF,OAZD,CADF;AAcAd,MAAAA,MAAM,CAACO,QAAD,CAAN;AACD;;AACD,WAAO,MAAM;AACX,UAAIR,GAAJ,EAAS;AACPA,QAAAA,GAAG,CAACgB,aAAJ;AACD;AACF,KAJD,CA7BY,CAkCZ;AACD,GAnCM,EAmCJ,CAACZ,SAAD,EAAYJ,GAAZ,CAnCI,CAAP;AAqCAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,GAAG,IAAII,SAAX,EAAsB;AACpBE,MAAAA,QAAQ,CAAC;AAAEN,QAAAA,GAAF;AAAOI,QAAAA,SAAP;AAAkBG,QAAAA;AAAlB,OAAD,CAAR;AACD;;AACD,WAAO,MAAM;AACXD,MAAAA,QAAQ,CAAC;AAAEN,QAAAA,GAAG,EAAEiB,SAAP;AAAkBb,QAAAA,SAAS,EAAEa,SAA7B;AAAwCV,QAAAA,IAAI,EAAEU;AAA9C,OAAD,CAAR;AACD,KAFD;AAGD,GAPQ,EAON,CAACjB,GAAD,EAAMI,SAAN,CAPM,CAAT;AASA,MAAM,CAACc,MAAD,EAASC,SAAT,IAAsBnC,QAAQ,CAACQ,KAAK,CAAC0B,MAAN,IAAgB,IAAjB,CAApC;AACA;AACF;AACA;;AACEnC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,GAAG,IAAIkB,MAAX,EAAmB;AACjB,UAAIE,IAAI,GAAGF,MAAX;;AACA,UAAIA,MAAM,IAAKA,MAAD,CAAuBG,GAAjC,IAAyCH,MAAD,CAAuBI,GAAnE,EAAwE;AACtEF,QAAAA,IAAI,GAAG,IAAIb,IAAI,CAACgB,KAAT,CAAgBL,MAAD,CAAuBG,GAAtC,EAA4CH,MAAD,CAAuBI,GAAlE,CAAP;AACAtB,QAAAA,GAAG,CAACwB,aAAJ,CAAkBJ,IAAlB,EAAyBlB,IAAzB;AACD;;AACDF,MAAAA,GAAG,CAACwB,aAAJ,CAAkBN,MAAlB,EAA0BhB,IAA1B;AACD,KARa,CASd;;AACD,GAVQ,EAUN,CAACgB,MAAD,EAASlB,GAAT,CAVM,CAAT;AAYA,MAAM,CAACyB,aAAD,EAAgBC,gBAAhB,IAAoC1C,QAAQ,CAACQ,KAAK,CAACiC,aAAP,CAAlD;AACA;AACF;AACA;;AACE1C,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,GAAG,IAAIyB,aAAX,EAA0B;AACxB,UAAME,MAAM,GAAG,IAAIpB,IAAI,CAACqB,SAAT,EAAf;AACAD,MAAAA,MAAM,CAACE,GAAP,CAAYC,MAAD,IAAY;AACrBX,QAAAA,SAAS,CAACW,MAAM,CAAChB,IAAR,CAAT;AACAX,QAAAA,OAAO,CAAC2B,MAAM,CAACC,KAAR,CAAP;AACAL,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,OAJD;AAKD;AACF,GATQ,EASN,CAACD,aAAD,EAAgBzB,GAAhB,CATM,CAAT;AAWAX,EAAAA,kBAAkB,CAAmBW,GAAnB,EAAyBR,KAAzB,EAAgC,CAChD,OADgD,EAEhD,UAFgD,EAGhD,YAHgD,EAIhD,eAJgD,EAKhD,eALgD,EAMhD,WANgD,EAOhD,WAPgD,EAQhD,UARgD,EAShD,WATgD,EAUhD,QAVgD,EAWhD,SAXgD,EAYhD,WAZgD,EAahD,SAbgD,EAchD,YAdgD,EAehD,YAfgD,EAgBhD,eAhBgD,EAiBhD,eAjBgD,EAkBhD,eAlBgD,EAmBhD,WAnBgD,EAoBhD,UApBgD,EAqBhD,SArBgD,EAsBhD,cAtBgD,EAuBhD,iBAvBgD,EAwBhD,MAxBgD,EAyBhD,QAzBgD,EA0BhD,cA1BgD,EA2BhD,aA3BgD,EA4BhD,YA5BgD,EA6BhD,aA7BgD,EA8BhD,YA9BgD,EA+BhD,WA/BgD,EAgChD,UAhCgD,EAiChD,WAjCgD,CAAhC,CAAlB,CAnFyC,CAsHzC;;AACAJ,EAAAA,aAAa,CAAmBY,GAAnB,EAAyBR,KAAzB,EAAgC,CAC3C,eAD2C,EAE3C,gBAF2C,EAG3C,SAH2C,EAI3C,SAJ2C,EAK3C,UAL2C,EAM3C,YAN2C,EAO3C,UAP2C,EAQ3C,aAR2C,EAS3C,SAT2C,EAU3C,UAV2C,EAW3C,MAX2C,CAAhC,CAAb;AAaAL,EAAAA,mBAAmB,CAAmBa,GAAnB,EAAyBR,KAAzB,EAAgC,CACjD,UADiD,EAEjD,iBAFiD,EAGjD,iBAHiD,EAIjD,UAJiD,EAKjD,kBALiD,EAMjD,gBANiD,EAOjD,aAPiD,EAQjD,YARiD,CAAhC,CAAnB;AAUA,SAAO;AACLQ,IAAAA,GADK;AAELC,IAAAA,MAFK;AAGLC,IAAAA,IAHK;AAILC,IAAAA,OAJK;AAKLC,IAAAA,SALK;AAMLC,IAAAA,YANK;AAOLa,IAAAA,MAPK;AAQLC,IAAAA,SARK;AASLM,IAAAA,aATK;AAULC,IAAAA;AAVK,GAAP;AAYD",
  "sourcesContent": [
    "import { useEffect, useState, useMemo, useContext } from 'react';\nimport { useEnableProperties, useProperties, useEventProperties } from '@uiw/react-baidu-map-utils';\nimport { MapProps } from './';\nimport { Context } from './context';\n\nexport interface OverlayProps extends MapChildProps {\n  /**\n   * 覆盖物是否可见\n   */\n  visiable?: boolean;\n}\n\n/**\n * 此类型是 `<Map>` 组件传递给子组件(如 `<Marker>`)的两个 `props`\n */\nexport interface MapChildProps {\n  /**\n   * 地图API的核心类，SDK加载完成才有\n   */\n  BMap?: typeof BMap;\n  /**\n   * 实例化后的地图对象\n   */\n  map?: BMap.Map;\n}\n\nexport interface UseMap extends MapProps, MapChildProps {}\n\nexport function useMap(props: UseMap = {}) {\n  const { widget, minZoom, maxZoom, mapType, enableHighResolution, enableAutoResize, enableMapClick } = props;\n  const [map, setMap] = useState<BMap.Map>();\n  const [zoom, setZoom] = useState(props.zoom || 15);\n  const [container, setContainer] = useState<HTMLDivElement | null | undefined>(props.container);\n  const { dispatch } = useContext(Context);\n  useMemo(() => {\n    if (container && !map && BMap) {\n      const instance = new BMap.Map(container, {\n        minZoom,\n        maxZoom,\n        mapType,\n        enableHighResolution,\n        enableAutoResize,\n        enableMapClick,\n      });\n      /**\n       * 加载控件\n       */\n      widget &&\n        widget.forEach((item) => {\n          if (!BMap) {\n            return;\n          }\n          if (typeof item === 'string') {\n            instance.addControl(new (BMap[item] as any)());\n          } else if (typeof item === 'object' && item.control && typeof item.control === 'function') {\n            instance.addControl(item.control(BMap, instance));\n          } else if (typeof item === 'object' && item.name) {\n            const options = typeof item.options === 'function' ? item.options(BMap, instance) : item.options;\n            instance.addControl(new (BMap[item.name] as any)(options));\n          }\n        });\n      setMap(instance);\n    }\n    return () => {\n      if (map) {\n        map.clearOverlays();\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [container, map]);\n\n  useEffect(() => {\n    if (map && container) {\n      dispatch({ map, container, BMap });\n    }\n    return () => {\n      dispatch({ map: undefined, container: undefined, BMap: undefined });\n    };\n  }, [map, container]);\n\n  const [center, setCenter] = useState(props.center || '上海');\n  /**\n   * 根据参数设置中心点\n   */\n  useEffect(() => {\n    if (map && center) {\n      let cent = center;\n      if (center && (center as BMap.Point).lng && (center as BMap.Point).lat) {\n        cent = new BMap.Point((center as BMap.Point).lng, (center as BMap.Point).lat);\n        map.centerAndZoom(cent!, zoom!);\n      }\n      map.centerAndZoom(center, zoom!);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [center, map]);\n\n  const [autoLocalCity, setAutoLocalCity] = useState(props.autoLocalCity);\n  /**\n   * IP定位获取当前城市，进行自动定位\n   */\n  useEffect(() => {\n    if (map && autoLocalCity) {\n      const myCity = new BMap.LocalCity();\n      myCity.get((result) => {\n        setCenter(result.name as any);\n        setZoom(result.level as any);\n        setAutoLocalCity(false);\n      });\n    }\n  }, [autoLocalCity, map]);\n\n  useEventProperties<BMap.Map, UseMap>(map!, props, [\n    'Click',\n    'DblClick',\n    'RightClick',\n    'RightdblClick',\n    'MapTypeChange',\n    'MouseMove',\n    'MouseOver',\n    'MouseOut',\n    'MoveStart',\n    'Moving',\n    'MoveEnd',\n    'ZoomStart',\n    'ZoomEnd',\n    'AddOverlay',\n    'AddControl',\n    'RemoveControl',\n    'RemoveOverlay',\n    'ClearOverlays',\n    'DragStart',\n    'Dragging',\n    'DragEnd',\n    'AddTileLayer',\n    'RemoveTileLayer',\n    'Load',\n    'ReSize',\n    'HotspotClick',\n    'HotspotOver',\n    'HotspotOut',\n    'TilesLoaded',\n    'TouchStart',\n    'TouchMove',\n    'TouchEnd',\n    'LongPress',\n  ]);\n  // 'Center',\n  useProperties<BMap.Map, UseMap>(map!, props, [\n    'DefaultCursor',\n    'DraggingCursor',\n    'MinZoom',\n    'MaxZoom',\n    'MapStyle',\n    'MapStyleV2',\n    'Panorama',\n    'CurrentCity',\n    'MapType',\n    'Viewport',\n    'Zoom',\n  ]);\n  useEnableProperties<BMap.Map, UseMap>(map!, props, [\n    'Dragging',\n    'ScrollWheelZoom',\n    'DoubleClickZoom',\n    'Keyboard',\n    'InertialDragging',\n    'ContinuousZoom',\n    'PinchToZoom',\n    'AutoResize',\n  ]);\n  return {\n    map,\n    setMap,\n    zoom,\n    setZoom,\n    container,\n    setContainer,\n    center,\n    setCenter,\n    autoLocalCity,\n    setAutoLocalCity,\n  };\n}\n"
  ]
}