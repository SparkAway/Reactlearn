{
  "version": 3,
  "sources": [
    "../src/hooks.tsx"
  ],
  "names": [
    "render",
    "React",
    "Fragment",
    "useEffect",
    "useState",
    "useRef",
    "useLayoutEffect",
    "useEnableProperties",
    "instance",
    "props",
    "propsName",
    "forEach",
    "name",
    "eName",
    "funName",
    "undefined",
    "useVisiable",
    "visiable",
    "state",
    "setState",
    "show",
    "hide",
    "useProperties",
    "charAt",
    "toLowerCase",
    "slice",
    "data",
    "lng",
    "lat",
    "BMap",
    "Point",
    "preData",
    "equals",
    "useEventProperties",
    "eventName",
    "type",
    "eventHandle",
    "replace",
    "addEventListener",
    "removeEventListener",
    "usePrevious",
    "value",
    "ref",
    "current",
    "useRenderDom",
    "container",
    "document",
    "createElement",
    "children"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/// <reference types=\"@uiw/react-baidu-map-types\" />\nimport { render } from 'react-dom';\nimport React, { Fragment, useEffect, useState, useRef, useLayoutEffect } from 'react';\n\n/**\n * 批量创建多个如下 State，监听并设置值，\n * 组件属性更改 <Componet enableDragging={true} >\n * 根据 enableDragging 的 Boolean 值，执行 `enable` 和 `disable` 开头的函数。\n * @example\n * ```js\n * const [enableDragging, setEnableDragging] = useState(props.enableDragging);\n * useEffect(() => {\n *   console.log('~~:enableDragging', enableDragging, props.enableDragging, polyline);\n *   setEnableDragging(props.enableDragging)\n * }, [polyline, enableDragging, props.enableDragging]);\n * ```\n * @param instance\n * @param props\n * @param propsName\n */\nexport function useEnableProperties<T = {}, F = {}>(instance: T, props = {} as F, propsName: string[] = []) {\n  propsName.forEach((name) => {\n    const eName = `enable${name}` as keyof F;\n    const funName = (props[eName] ? `enable${name}` : `disable${name}`) as keyof T;\n    if (instance && props[eName] !== undefined) {\n      instance[funName] && (instance[funName] as any)();\n    }\n  });\n}\n\n/**\n * 针对 Overlay 类型的组件，有公共的是否显示 对象处理\n * 通过参数 `visiable` 来控制执行 `show()` or `hide()`\n */\nexport function useVisiable<T extends BMap.Overlay, F extends { visiable?: boolean }>(instance: T, props = {} as F) {\n  const visiable = (props as any).visiable;\n  const [state, setState] = useState(visiable);\n  useEffect(() => {\n    if (instance && visiable !== undefined) {\n      if (visiable) {\n        instance.show && instance.show();\n      } else {\n        instance.hide && instance.hide();\n      }\n      if (visiable !== state) {\n        setState(visiable);\n      }\n    }\n  }, [instance, state, visiable]);\n}\n\n/**\n * 批量创建多个如下 State，监听并设置值，\n * 执行 `set` 开头的函数。\n * @param instance\n * @param props\n * @param propsName\n */\nexport function useProperties<T, F>(instance: T, props: F, propsName: string[] = []) {\n  propsName.forEach((name) => {\n    const eName = `${name.charAt(0).toLowerCase()}${name.slice(1)}` as keyof F;\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [state, setState] = useState(props[eName]);\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      if (instance && instance[`set${name}` as keyof T] && props[eName] !== undefined) {\n        /**\n         * 坐标点的参数设置，比对, 坐标点的参数设置\n         */\n        let data: any = props[eName];\n        if (data && data.lng && data.lat) {\n          data = new BMap.Point(data.lng, data.lat);\n          let preData: any = state;\n          if (preData && preData.lng && preData.lat) {\n            preData = new BMap.Point(preData.lng, preData.lat);\n            if (data.equals(preData)) {\n              return;\n            }\n          }\n        }\n\n        (instance[`set${name}` as keyof T] as any)(data);\n        // 属性发生变化缓存\n        if (state !== props[eName]) {\n          if (eName === 'bounds') {\n            if (state && props[eName] && !(state as any).equals(props[eName])) {\n              setState(props[eName]);\n            }\n          } else {\n            setState(props[eName]);\n          }\n        }\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [instance, props[eName]]);\n  });\n}\n\nexport interface EventListener {\n  /**\n   * 添加事件监听函数\n   * @param event\n   * @param handler\n   */\n  addEventListener(event: string, handler: any): void;\n  /**\n   * 移除事件监听函数\n   * @param event\n   * @param handler\n   */\n  removeEventListener(event: string, handler: any): void;\n}\n\nexport type EventNameType = 'CamelCase' | 'PascalCase' | 'LowerCase';\n\n/**\n * 绑定事件\n * @param instance 实例对象\n * @param props 传递进来的 props\n * @param eventName 事件的名字，如，我们使用 `onClick` 事件，最终被转换成，`click` 绑定到实例中，`onDblClick` => `dblclick`\n *\n * @example\n * ```js\n * useEventProperties<BMap.Marker, UseMarker>(marker!, props, [\n *   'Click', 'DblClick', 'MouseDown', 'MouseUp', 'MouseOut', 'MouseOver'\n * ]);\n * ```\n */\nexport function useEventProperties<T extends EventListener, F>(\n  instance: T,\n  props = {} as F,\n  eventName: string[] = [],\n  type?: EventNameType,\n) {\n  eventName.forEach((name) => {\n    const eventName = `on${name}` as keyof F;\n    const eventHandle = props[eventName];\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      if (!instance) return;\n      if (eventHandle && name) {\n        let eName = name;\n        if (type === 'CamelCase') {\n          eName = name.replace(name[0], name[0].toLowerCase());\n        } else {\n          eName = name.toLowerCase();\n        }\n        instance.addEventListener(eName, eventHandle);\n        return () => {\n          instance.removeEventListener(eName, eventHandle);\n        };\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [instance, props[eventName]]);\n  });\n}\n\n/**\n * 获取上一轮的 props 或 state\n * How to get the previous props or state?\n * https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n * @example\n * ```js\n * function Counter() {\n *   const [count, setCount] = useState(0);\n *   const prevCount = usePrevious(count);\n *   return <h1>Now: {count}, before: {prevCount}</h1>;\n * }\n * ```\n */\nexport function usePrevious<T>(value: T) {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport function useRenderDom(props: { children: React.ReactNode }) {\n  const container = useRef(document.createElement('div'));\n\n  useLayoutEffect(() => {\n    render(<Fragment>{props.children}</Fragment>, container.current);\n  }, [props.children]);\n\n  return { container: container.current };\n}\n"
  ]
}