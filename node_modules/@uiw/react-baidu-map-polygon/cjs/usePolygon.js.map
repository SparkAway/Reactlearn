{
  "version": 3,
  "sources": [
    "../src/usePolygon.tsx"
  ],
  "names": [
    "usePolygon",
    "props",
    "strokeColor",
    "fillColor",
    "strokeWeight",
    "strokeOpacity",
    "fillOpacity",
    "strokeStyle",
    "enableMassClear",
    "enableEditing",
    "enableClicking",
    "map",
    "polygon",
    "setPolygon",
    "path",
    "setPath",
    "opts",
    "BMap",
    "noop",
    "points",
    "item",
    "Point",
    "lng",
    "lat",
    "instance",
    "Polygon",
    "addOverlay",
    "removeOverlay"
  ],
  "mappings": "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",
  "sourcesContent": [
    "import { useState, useEffect } from 'react';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\nimport { noop, useEnableProperties, useProperties, useVisiable, useEventProperties } from '@uiw/react-baidu-map-utils';\nimport { PolygonProps } from './';\n\nexport interface UsePolygon extends PolygonProps {}\n\nexport function usePolygon(props = {} as UsePolygon) {\n  const {\n    strokeColor,\n    fillColor,\n    strokeWeight,\n    strokeOpacity,\n    fillOpacity,\n    strokeStyle,\n    enableMassClear,\n    enableEditing,\n    enableClicking,\n  } = props;\n  const { map } = useMapContext();\n  const [polygon, setPolygon] = useState<BMap.Polygon>();\n  const [path, setPath] = useState(props.path || []);\n\n  const opts = {\n    strokeColor,\n    fillColor,\n    strokeWeight,\n    strokeOpacity,\n    fillOpacity,\n    strokeStyle,\n    enableMassClear,\n    enableEditing,\n    enableClicking,\n  };\n\n  useEffect(() => {\n    if (!BMap || !map) return noop;\n    const points = (path || []).map((item) => new BMap.Point(item.lng, item.lat));\n    const instance = new BMap.Polygon(points, opts);\n    map.addOverlay(instance);\n    setPolygon(instance);\n    return function () {\n      map.removeOverlay(instance);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map]);\n\n  useEffect(() => {\n    if (path && polygon) {\n      const points = path.map((item) => new BMap.Point(item.lng, item.lat));\n      polygon.setPath(points);\n    }\n  }, [polygon, path]);\n\n  useVisiable(polygon!, props);\n  useEventProperties<BMap.Polygon, UsePolygon>(polygon!, props, [\n    'Click',\n    'DoubleClick',\n    'MouseDown',\n    'MouseUp',\n    'MouseOut',\n    'MouseOver',\n    'Remove',\n    'LineUpdate',\n  ]);\n  useEnableProperties<BMap.Polygon, UsePolygon>(polygon!, props, ['Editing', 'MassClear']);\n  // PositionAt\n  useProperties<BMap.Polygon, PolygonProps>(polygon!, props, [\n    'StrokeColor',\n    'StrokeOpacity',\n    'FillColor',\n    'FillOpacity',\n    'StrokeWeight',\n    'StrokeStyle',\n  ]);\n\n  return {\n    polygon,\n    setPolygon,\n    path,\n    setPath,\n  };\n}\n"
  ]
}