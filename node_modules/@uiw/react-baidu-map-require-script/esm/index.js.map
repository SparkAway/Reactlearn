{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "React",
    "Fragment",
    "useEffect",
    "useState",
    "requireScript",
    "forwardRef",
    "props",
    "ref",
    "children",
    "map",
    "container",
    "completed",
    "setCompleted",
    "src",
    "then",
    "onCompleted",
    "catch",
    "err",
    "onFailed",
    "childs",
    "Children",
    "toArray",
    "BMap",
    "child",
    "isValidElement",
    "cloneElement"
  ],
  "mappings": ";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,aAAT,QAA8B,4BAA9B;;AAWA,4BAAeJ,KAAK,CAACK,UAAN,CAMb,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAChB,MAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,GAAZ;AAAiBC,IAAAA;AAAjB,MAA+BJ,KAAK,IAAI,EAA9C;AACA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,KAAK,CAACO,GAAV,EAAe;AACbT,MAAAA,aAAa,CAACE,KAAK,CAACO,GAAP,CAAb,CACGC,IADH,CACQ,MAAM;AACVF,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACAN,QAAAA,KAAK,CAACS,WAAN,IAAqBT,KAAK,CAACS,WAAN,EAArB;AACD,OAJH,EAKGC,KALH,CAKUC,GAAD,IAAS;AACdX,QAAAA,KAAK,CAACY,QAAN,IAAkBZ,KAAK,CAACY,QAAN,CAAeD,GAAf,CAAlB;AACD,OAPH;AAQD,KAVa,CAWd;;AACD,GAZQ,EAYN,EAZM,CAAT;AAaA,MAAME,MAAM,GAAGnB,KAAK,CAACoB,QAAN,CAAeC,OAAf,CAAuBb,QAAvB,CAAf;;AACA,MAAIG,SAAJ,EAAe;AACb,wBACE,MAAC,QAAD;AAAA,iBACG,OAAOH,QAAP,KAAoB,UAApB,IAAkCA,QAAQ,CAAC;AAAEc,QAAAA,IAAF;AAAQb,QAAAA,GAAR;AAAaC,QAAAA;AAAb,OAAD,CAD7C,EAEGS,MAAM,CAACV,GAAP,CAAYc,KAAD,IAAW;AACrB,YAAI,eAACvB,KAAK,CAACwB,cAAN,CAAqBD,KAArB,CAAL,EAAkC,OAAO,IAAP;AAClC,4BAAOvB,KAAK,CAACyB,YAAN,CAAmBF,KAAnB,eACFA,KAAK,CAACjB,KADJ;AAELgB,UAAAA,IAFK;AAGLb,UAAAA,GAHK;AAILC,UAAAA;AAJK,WAAP;AAMD,OARA,CAFH;AAAA,MADF;AAcD;;AAED,SAAO,IAAP;AACD,CAzCc,CAAf",
  "sourcesContent": [
    "import React, { Fragment, useEffect, useState } from 'react';\nimport { requireScript } from '@uiw/react-baidu-map-utils';\nimport { MapChildRenderProps } from '@uiw/react-baidu-map-map';\n\nexport type RequireScriptProps = {\n  src?: string;\n  /** ✅ 加载完成 */\n  onCompleted?: () => void;\n  /** ❌ 加载失败 */\n  onFailed?: (error: any) => void;\n} & MapChildRenderProps;\n\nexport default React.forwardRef<\n  RequireScriptProps,\n  RequireScriptProps & {\n    map: BMap.Map;\n    container?: string | HTMLDivElement | null;\n  }\n>((props, ref) => {\n  const { children, map, container } = props || {};\n  const [completed, setCompleted] = useState(false);\n  useEffect(() => {\n    if (props.src) {\n      requireScript(props.src)\n        .then(() => {\n          setCompleted(true);\n          props.onCompleted && props.onCompleted();\n        })\n        .catch((err) => {\n          props.onFailed && props.onFailed(err);\n        });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const childs = React.Children.toArray(children);\n  if (completed) {\n    return (\n      <Fragment>\n        {typeof children === 'function' && children({ BMap, map, container })}\n        {childs.map((child) => {\n          if (!React.isValidElement(child)) return null;\n          return React.cloneElement(child, {\n            ...child.props,\n            BMap,\n            map,\n            container,\n          });\n        })}\n      </Fragment>\n    );\n  }\n\n  return null;\n});\n"
  ]
}