{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "React",
    "forwardRef",
    "props",
    "ref",
    "children",
    "map",
    "container",
    "completed",
    "setCompleted",
    "src",
    "then",
    "onCompleted",
    "catch",
    "err",
    "onFailed",
    "childs",
    "Children",
    "toArray",
    "BMap",
    "child",
    "isValidElement",
    "cloneElement"
  ],
  "mappings": ";;;;;;;;;;;;;;;AAAA;;AACA;;;;4BAWeA,eAAMC,UAAN,CAMb,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAChB,aAAqCD,KAAK,IAAI,EAA9C;AAAA,MAAQE,QAAR,QAAQA,QAAR;AAAA,MAAkBC,GAAlB,QAAkBA,GAAlB;AAAA,MAAuBC,SAAvB,QAAuBA,SAAvB;;AACA,kBAAkC,qBAAS,KAAT,CAAlC;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AACA,wBAAU,YAAM;AACd,QAAIN,KAAK,CAACO,GAAV,EAAe;AACb,6CAAcP,KAAK,CAACO,GAApB,EACGC,IADH,CACQ,YAAM;AACVF,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACAN,QAAAA,KAAK,CAACS,WAAN,IAAqBT,KAAK,CAACS,WAAN,EAArB;AACD,OAJH,EAKGC,KALH,CAKS,UAACC,GAAD,EAAS;AACdX,QAAAA,KAAK,CAACY,QAAN,IAAkBZ,KAAK,CAACY,QAAN,CAAeD,GAAf,CAAlB;AACD,OAPH;AAQD,KAVa,CAWd;;AACD,GAZD,EAYG,EAZH;;AAaA,MAAME,MAAM,GAAGf,eAAMgB,QAAN,CAAeC,OAAf,CAAuBb,QAAvB,CAAf;;AACA,MAAIG,SAAJ,EAAe;AACb,wBACE,sBAAC,eAAD;AAAA,iBACG,OAAOH,QAAP,KAAoB,UAApB,IAAkCA,QAAQ,CAAC;AAAEc,QAAAA,IAAI,EAAJA,IAAF;AAAQb,QAAAA,GAAG,EAAHA,GAAR;AAAaC,QAAAA,SAAS,EAATA;AAAb,OAAD,CAD7C,EAEGS,MAAM,CAACV,GAAP,CAAW,UAACc,KAAD,EAAW;AACrB,YAAI,eAACnB,eAAMoB,cAAN,CAAqBD,KAArB,CAAL,EAAkC,OAAO,IAAP;AAClC,4BAAOnB,eAAMqB,YAAN,CAAmBF,KAAnB,8DACFA,KAAK,CAACjB,KADJ;AAELgB,UAAAA,IAAI,EAAJA,IAFK;AAGLb,UAAAA,GAAG,EAAHA,GAHK;AAILC,UAAAA,SAAS,EAATA;AAJK,WAAP;AAMD,OARA,CAFH;AAAA,MADF;AAcD;;AAED,SAAO,IAAP;AACD,CAzCc,C",
  "sourcesContent": [
    "import React, { Fragment, useEffect, useState } from 'react';\nimport { requireScript } from '@uiw/react-baidu-map-utils';\nimport { MapChildRenderProps } from '@uiw/react-baidu-map-map';\n\nexport type RequireScriptProps = {\n  src?: string;\n  /** ✅ 加载完成 */\n  onCompleted?: () => void;\n  /** ❌ 加载失败 */\n  onFailed?: (error: any) => void;\n} & MapChildRenderProps;\n\nexport default React.forwardRef<\n  RequireScriptProps,\n  RequireScriptProps & {\n    map: BMap.Map;\n    container?: string | HTMLDivElement | null;\n  }\n>((props, ref) => {\n  const { children, map, container } = props || {};\n  const [completed, setCompleted] = useState(false);\n  useEffect(() => {\n    if (props.src) {\n      requireScript(props.src)\n        .then(() => {\n          setCompleted(true);\n          props.onCompleted && props.onCompleted();\n        })\n        .catch((err) => {\n          props.onFailed && props.onFailed(err);\n        });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const childs = React.Children.toArray(children);\n  if (completed) {\n    return (\n      <Fragment>\n        {typeof children === 'function' && children({ BMap, map, container })}\n        {childs.map((child) => {\n          if (!React.isValidElement(child)) return null;\n          return React.cloneElement(child, {\n            ...child.props,\n            BMap,\n            map,\n            container,\n          });\n        })}\n      </Fragment>\n    );\n  }\n\n  return null;\n});\n"
  ]
}