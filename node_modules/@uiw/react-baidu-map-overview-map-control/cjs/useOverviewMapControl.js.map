{
  "version": 3,
  "sources": [
    "../src/useOverviewMapControl.tsx"
  ],
  "names": [
    "useOverviewMapControl",
    "props",
    "overviewMapControl",
    "setOverviewMapControl",
    "anchor",
    "offset",
    "size",
    "isOpen",
    "map",
    "instance",
    "BMap",
    "OverviewMapControl",
    "BMAP_ANCHOR_TOP_LEFT",
    "addControl",
    "removeControl"
  ],
  "mappings": ";;;;;;;;;;;AAAA;;AACA;;AACA;;AAKO,SAASA,qBAAT,GAAoE;AAAA,MAArCC,KAAqC,uEAA7B,EAA6B;;AACzE,kBAAoD,sBAApD;AAAA;AAAA,MAAOC,kBAAP;AAAA,MAA2BC,qBAA3B;;AACA,MAAQC,MAAR,GAAyCH,KAAzC,CAAQG,MAAR;AAAA,MAAgBC,MAAhB,GAAyCJ,KAAzC,CAAgBI,MAAhB;AAAA,MAAwBC,IAAxB,GAAyCL,KAAzC,CAAwBK,IAAxB;AAAA,MAA8BC,MAA9B,GAAyCN,KAAzC,CAA8BM,MAA9B;;AACA,uBAAgB,sCAAhB;AAAA,MAAQC,GAAR,kBAAQA,GAAR;;AACA,wBAAU,YAAM;AACd,QAAIA,GAAG,IAAI,CAACN,kBAAZ,EAAgC;AAC9B,UAAMO,QAAQ,GAAG,IAAIC,IAAI,CAACC,kBAAT,CAA4B;AAC3CP,QAAAA,MAAM,EAAEA,MAAM,IAAIQ,oBADyB;AAE3CP,QAAAA,MAAM,EAANA,MAF2C;AAG3CC,QAAAA,IAAI,EAAJA,IAH2C;AAI3CC,QAAAA,MAAM,EAANA;AAJ2C,OAA5B,CAAjB;AAMAC,MAAAA,GAAG,CAACK,UAAJ,CAAeJ,QAAf;AACAN,MAAAA,qBAAqB,CAACM,QAAD,CAArB;AACA,aAAO,YAAM;AACXD,QAAAA,GAAG,CAACM,aAAJ,CAAkBL,QAAlB;AACD,OAFD;AAGD,KAba,CAcd;;AACD,GAfD,EAeG,CAACD,GAAD,CAfH;AAiBA,uCAAYN,kBAAZ,EAAiCD,KAAjC;AACA,8CAAmEC,kBAAnE,EAAwFD,KAAxF,EAA+F,CAC7F,aAD6F,EAE7F,cAF6F,CAA/F;AAIA,yCAA8DC,kBAA9D,EAAmFD,KAAnF,EAA0F,CACxF,QADwF,EAExF,QAFwF,EAGxF,MAHwF,CAA1F;AAKA,SAAO;AACLC,IAAAA,kBAAkB,EAAlBA,kBADK;AAELC,IAAAA,qBAAqB,EAArBA;AAFK,GAAP;AAID",
  "sourcesContent": [
    "import { useEffect, useState } from 'react';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\nimport { useProperties, useVisiable, useEventProperties } from '@uiw/react-baidu-map-utils';\nimport { OverviewMapControlProps } from './';\n\nexport interface UseOverviewMapControl extends OverviewMapControlProps {}\n\nexport function useOverviewMapControl(props = {} as UseOverviewMapControl) {\n  const [overviewMapControl, setOverviewMapControl] = useState<BMap.OverviewMapControl>();\n  const { anchor, offset, size, isOpen } = props;\n  const { map } = useMapContext();\n  useEffect(() => {\n    if (map && !overviewMapControl) {\n      const instance = new BMap.OverviewMapControl({\n        anchor: anchor || BMAP_ANCHOR_TOP_LEFT,\n        offset,\n        size,\n        isOpen,\n      });\n      map.addControl(instance);\n      setOverviewMapControl(instance);\n      return () => {\n        map.removeControl(instance);\n      };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map]);\n\n  useVisiable(overviewMapControl!, props);\n  useEventProperties<BMap.OverviewMapControl, UseOverviewMapControl>(overviewMapControl!, props, [\n    'ViewChanged',\n    'ViewChanging',\n  ]);\n  useProperties<BMap.OverviewMapControl, UseOverviewMapControl>(overviewMapControl!, props, [\n    'Anchor',\n    'Offset',\n    'Size',\n  ]);\n  return {\n    overviewMapControl,\n    setOverviewMapControl,\n  };\n}\n"
  ]
}