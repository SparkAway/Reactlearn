{
  "version": 3,
  "sources": [
    "../src/useOverviewMapControl.tsx"
  ],
  "names": [
    "useEffect",
    "useState",
    "useMapContext",
    "useProperties",
    "useVisiable",
    "useEventProperties",
    "useOverviewMapControl",
    "props",
    "overviewMapControl",
    "setOverviewMapControl",
    "anchor",
    "offset",
    "size",
    "isOpen",
    "map",
    "instance",
    "BMap",
    "OverviewMapControl",
    "BMAP_ANCHOR_TOP_LEFT",
    "addControl",
    "removeControl"
  ],
  "mappings": "AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,kBAArC,QAA+D,4BAA/D;AAKA,OAAO,SAASC,qBAAT,CAA+BC,KAA/B,EAAoE;AAAA,MAArCA,KAAqC;AAArCA,IAAAA,KAAqC,GAA7B,EAA6B;AAAA;;AACzE,MAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CR,QAAQ,EAA5D;AACA,MAAM;AAAES,IAAAA,MAAF;AAAUC,IAAAA,MAAV;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA;AAAxB,MAAmCN,KAAzC;AACA,MAAM;AAAEO,IAAAA;AAAF,MAAUZ,aAAa,EAA7B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,GAAG,IAAI,CAACN,kBAAZ,EAAgC;AAC9B,UAAMO,QAAQ,GAAG,IAAIC,IAAI,CAACC,kBAAT,CAA4B;AAC3CP,QAAAA,MAAM,EAAEA,MAAM,IAAIQ,oBADyB;AAE3CP,QAAAA,MAF2C;AAG3CC,QAAAA,IAH2C;AAI3CC,QAAAA;AAJ2C,OAA5B,CAAjB;AAMAC,MAAAA,GAAG,CAACK,UAAJ,CAAeJ,QAAf;AACAN,MAAAA,qBAAqB,CAACM,QAAD,CAArB;AACA,aAAO,MAAM;AACXD,QAAAA,GAAG,CAACM,aAAJ,CAAkBL,QAAlB;AACD,OAFD;AAGD,KAba,CAcd;;AACD,GAfQ,EAeN,CAACD,GAAD,CAfM,CAAT;AAiBAV,EAAAA,WAAW,CAACI,kBAAD,EAAsBD,KAAtB,CAAX;AACAF,EAAAA,kBAAkB,CAAiDG,kBAAjD,EAAsED,KAAtE,EAA6E,CAC7F,aAD6F,EAE7F,cAF6F,CAA7E,CAAlB;AAIAJ,EAAAA,aAAa,CAAiDK,kBAAjD,EAAsED,KAAtE,EAA6E,CACxF,QADwF,EAExF,QAFwF,EAGxF,MAHwF,CAA7E,CAAb;AAKA,SAAO;AACLC,IAAAA,kBADK;AAELC,IAAAA;AAFK,GAAP;AAID",
  "sourcesContent": [
    "import { useEffect, useState } from 'react';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\nimport { useProperties, useVisiable, useEventProperties } from '@uiw/react-baidu-map-utils';\nimport { OverviewMapControlProps } from './';\n\nexport interface UseOverviewMapControl extends OverviewMapControlProps {}\n\nexport function useOverviewMapControl(props = {} as UseOverviewMapControl) {\n  const [overviewMapControl, setOverviewMapControl] = useState<BMap.OverviewMapControl>();\n  const { anchor, offset, size, isOpen } = props;\n  const { map } = useMapContext();\n  useEffect(() => {\n    if (map && !overviewMapControl) {\n      const instance = new BMap.OverviewMapControl({\n        anchor: anchor || BMAP_ANCHOR_TOP_LEFT,\n        offset,\n        size,\n        isOpen,\n      });\n      map.addControl(instance);\n      setOverviewMapControl(instance);\n      return () => {\n        map.removeControl(instance);\n      };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map]);\n\n  useVisiable(overviewMapControl!, props);\n  useEventProperties<BMap.OverviewMapControl, UseOverviewMapControl>(overviewMapControl!, props, [\n    'ViewChanged',\n    'ViewChanging',\n  ]);\n  useProperties<BMap.OverviewMapControl, UseOverviewMapControl>(overviewMapControl!, props, [\n    'Anchor',\n    'Offset',\n    'Size',\n  ]);\n  return {\n    overviewMapControl,\n    setOverviewMapControl,\n  };\n}\n"
  ]
}