{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "React",
    "useImperativeHandle",
    "useGeolocationControl",
    "forwardRef",
    "props",
    "ref",
    "geolocationControl"
  ],
  "mappings": ";AAAA,OAAOA,KAAP,IAAgBC,mBAAhB,QAA2C,OAA3C;AAEA,SAASC,qBAAT,QAAsC,yBAAtC;AAEA,cAAc,yBAAd;AAYA,4BAAeF,KAAK,CAACG,UAAN,CAAmE,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAChG,MAAM;AAAEC,IAAAA;AAAF,MAAyBJ,qBAAqB,CAACE,KAAD,CAApD;AACAH,EAAAA,mBAAmB,CAACI,GAAD,EAAM,mBAAYD,KAAZ;AAAmBE,IAAAA;AAAnB,IAAN,EAAgD,CAACA,kBAAD,EAAqBF,KAArB,CAAhD,CAAnB;AACA,SAAO,IAAP;AACD,CAJc,CAAf",
  "sourcesContent": [
    "import React, { useImperativeHandle } from 'react';\nimport { OverlayProps } from '@uiw/react-baidu-map-map';\nimport { useGeolocationControl } from './useGeolocationControl';\n\nexport * from './useGeolocationControl';\nexport interface GeolocationControlProps extends OverlayProps, BMap.GeolocationControlOptions {\n  /**\n   * 定位成功后触发此事件\n   */\n  onLocationSuccess?(result: { point: BMap.Point; addressComponent: BMap.AddressComponent }): void;\n  /**\n   * 定位失败后触发此事件\n   */\n  onLocationError?(error: { statusCode: BMap.StatusCode }): void;\n}\n\nexport default React.forwardRef<GeolocationControlProps, GeolocationControlProps>((props, ref) => {\n  const { geolocationControl } = useGeolocationControl(props);\n  useImperativeHandle(ref, () => ({ ...props, geolocationControl }), [geolocationControl, props]);\n  return null;\n});\n"
  ]
}