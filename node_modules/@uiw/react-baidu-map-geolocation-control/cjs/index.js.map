{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "React",
    "forwardRef",
    "props",
    "ref",
    "geolocationControl"
  ],
  "mappings": ";;;;;;;;;;;;;;AAAA;;AAEA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;4BAYeA,eAAMC,UAAN,CAAmE,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAChG,8BAA+B,kDAAsBD,KAAtB,CAA/B;AAAA,MAAQE,kBAAR,yBAAQA,kBAAR;;AACA,kCAAoBD,GAApB,EAAyB;AAAA,uEAAYD,KAAZ;AAAmBE,MAAAA,kBAAkB,EAAlBA;AAAnB;AAAA,GAAzB,EAAmE,CAACA,kBAAD,EAAqBF,KAArB,CAAnE;AACA,SAAO,IAAP;AACD,CAJc,C",
  "sourcesContent": [
    "import React, { useImperativeHandle } from 'react';\nimport { OverlayProps } from '@uiw/react-baidu-map-map';\nimport { useGeolocationControl } from './useGeolocationControl';\n\nexport * from './useGeolocationControl';\nexport interface GeolocationControlProps extends OverlayProps, BMap.GeolocationControlOptions {\n  /**\n   * 定位成功后触发此事件\n   */\n  onLocationSuccess?(result: { point: BMap.Point; addressComponent: BMap.AddressComponent }): void;\n  /**\n   * 定位失败后触发此事件\n   */\n  onLocationError?(error: { statusCode: BMap.StatusCode }): void;\n}\n\nexport default React.forwardRef<GeolocationControlProps, GeolocationControlProps>((props, ref) => {\n  const { geolocationControl } = useGeolocationControl(props);\n  useImperativeHandle(ref, () => ({ ...props, geolocationControl }), [geolocationControl, props]);\n  return null;\n});\n"
  ]
}