{
  "version": 3,
  "sources": [
    "../src/useGeolocationControl.tsx"
  ],
  "names": [
    "useGeolocationControl",
    "props",
    "geolocationControl",
    "setGeolocationControl",
    "anchor",
    "offset",
    "showAddressBar",
    "enableAutoLocation",
    "locationIcon",
    "map",
    "instance",
    "BMap",
    "GeolocationControl",
    "BMAP_ANCHOR_TOP_LEFT",
    "addControl",
    "removeControl"
  ],
  "mappings": ";;;;;;;;;;;AAAA;;AACA;;AACA;;AAKO,SAASA,qBAAT,GAAoE;AAAA,MAArCC,KAAqC,uEAA7B,EAA6B;;AACzE,kBAAoD,sBAApD;AAAA;AAAA,MAAOC,kBAAP;AAAA,MAA2BC,qBAA3B;;AACA,MAAQC,MAAR,GAA6EH,KAA7E,CAAQG,MAAR;AAAA,MAAgBC,MAAhB,GAA6EJ,KAA7E,CAAgBI,MAAhB;AAAA,MAAwBC,cAAxB,GAA6EL,KAA7E,CAAwBK,cAAxB;AAAA,MAAwCC,kBAAxC,GAA6EN,KAA7E,CAAwCM,kBAAxC;AAAA,MAA4DC,YAA5D,GAA6EP,KAA7E,CAA4DO,YAA5D;;AACA,uBAAgB,sCAAhB;AAAA,MAAQC,GAAR,kBAAQA,GAAR;;AACA,wBAAU,YAAM;AACd,QAAIA,GAAG,IAAI,CAACP,kBAAZ,EAAgC;AAC9B,UAAMQ,QAAQ,GAAG,IAAIC,IAAI,CAACC,kBAAT,CAA4B;AAC3CR,QAAAA,MAAM,EAAEA,MAAM,IAAIS,oBADyB;AAE3CR,QAAAA,MAAM,EAANA,MAF2C;AAG3CC,QAAAA,cAAc,EAAdA,cAH2C;AAI3CC,QAAAA,kBAAkB,EAAlBA,kBAJ2C;AAK3CC,QAAAA,YAAY,EAAZA;AAL2C,OAA5B,CAAjB;AAOAC,MAAAA,GAAG,CAACK,UAAJ,CAAeJ,QAAf;AACAP,MAAAA,qBAAqB,CAACO,QAAD,CAArB;AACA,aAAO,YAAM;AACX,YAAID,GAAG,IAAIC,QAAX,EAAqB;AACnBD,UAAAA,GAAG,CAACM,aAAJ,CAAkBL,QAAlB;AACD;AACF,OAJD;AAKD,KAhBa,CAiBd;;AACD,GAlBD,EAkBG,CAACD,GAAD,CAlBH;AAoBA,uCAAYP,kBAAZ,EAAiCD,KAAjC;AACA,8CACEC,kBADF,EAEED,KAFF,EAGE,CAAC,iBAAD,EAAoB,eAApB,CAHF,EAIE,WAJF;AAMA,yCAA8DC,kBAA9D,EAAmFD,KAAnF,EAA0F,CAAC,QAAD,EAAW,QAAX,CAA1F;AACA,SAAO;AACLC,IAAAA,kBAAkB,EAAlBA,kBADK;AAELC,IAAAA,qBAAqB,EAArBA;AAFK,GAAP;AAID",
  "sourcesContent": [
    "import { useEffect, useState } from 'react';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\nimport { useProperties, useVisiable, useEventProperties } from '@uiw/react-baidu-map-utils';\nimport { GeolocationControlProps } from './';\n\nexport interface UseGeolocationControl extends GeolocationControlProps {}\n\nexport function useGeolocationControl(props = {} as UseGeolocationControl) {\n  const [geolocationControl, setGeolocationControl] = useState<BMap.GeolocationControl>();\n  const { anchor, offset, showAddressBar, enableAutoLocation, locationIcon } = props;\n  const { map } = useMapContext();\n  useEffect(() => {\n    if (map && !geolocationControl) {\n      const instance = new BMap.GeolocationControl({\n        anchor: anchor || BMAP_ANCHOR_TOP_LEFT,\n        offset,\n        showAddressBar,\n        enableAutoLocation,\n        locationIcon,\n      });\n      map.addControl(instance);\n      setGeolocationControl(instance);\n      return () => {\n        if (map && instance) {\n          map.removeControl(instance);\n        }\n      };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map]);\n\n  useVisiable(geolocationControl!, props);\n  useEventProperties<BMap.GeolocationControl, UseGeolocationControl>(\n    geolocationControl!,\n    props,\n    ['LocationSuccess', 'LocationError'],\n    'CamelCase',\n  );\n  useProperties<BMap.GeolocationControl, UseGeolocationControl>(geolocationControl!, props, ['Anchor', 'Offset']);\n  return {\n    geolocationControl,\n    setGeolocationControl,\n  };\n}\n"
  ]
}