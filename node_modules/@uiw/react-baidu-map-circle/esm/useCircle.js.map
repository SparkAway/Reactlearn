{
  "version": 3,
  "sources": [
    "../src/useCircle.tsx"
  ],
  "names": [
    "useState",
    "useMemo",
    "useMapContext",
    "useEnableProperties",
    "useProperties",
    "useVisiable",
    "useEventProperties",
    "useCircle",
    "props",
    "center",
    "radius",
    "strokeColor",
    "fillColor",
    "strokeWeight",
    "strokeOpacity",
    "fillOpacity",
    "strokeStyle",
    "enableMassClear",
    "enableEditing",
    "enableClicking",
    "map",
    "circle",
    "setCircle",
    "point",
    "lng",
    "lat",
    "BMap",
    "Point",
    "opts",
    "instance",
    "Circle",
    "addOverlay"
  ],
  "mappings": "AAAA,SAASA,QAAT,EAAmBC,OAAnB,QAAkC,OAAlC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,mBAAT,EAA8BC,aAA9B,EAA6CC,WAA7C,EAA0DC,kBAA1D,QAAoF,4BAApF;AAKA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA4C;AAAA,MAAzBA,KAAyB;AAAzBA,IAAAA,KAAyB,GAAjB,EAAiB;AAAA;;AACjD,MAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA,SAJI;AAKJC,IAAAA,YALI;AAMJC,IAAAA,aANI;AAOJC,IAAAA,WAPI;AAQJC,IAAAA,WARI;AASJC,IAAAA,eATI;AAUJC,IAAAA,aAVI;AAWJC,IAAAA;AAXI,MAYFX,KAZJ;AAaA,MAAM;AAAEY,IAAAA;AAAF,MAAUlB,aAAa,EAA7B;AACA,MAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBtB,QAAQ,EAApC;AAEAC,EAAAA,OAAO,CAAC,MAAM;AACZ,QAAImB,GAAG,IAAI,CAACC,MAAZ,EAAoB;AAClB,UAAIE,KAAK,GAAGd,MAAZ;;AACA,UAAIA,MAAM,IAAIA,MAAM,CAACe,GAAjB,IAAwBf,MAAM,CAACgB,GAAnC,EAAwC;AACtCF,QAAAA,KAAK,GAAG,IAAIG,IAAI,CAACC,KAAT,CAAelB,MAAM,CAACe,GAAtB,EAA2Bf,MAAM,CAACgB,GAAlC,CAAR;AACD;;AACD,UAAMG,IAAI,GAAG;AACXjB,QAAAA,WADW;AAEXC,QAAAA,SAFW;AAGXC,QAAAA,YAHW;AAIXC,QAAAA,aAJW;AAKXC,QAAAA,WALW;AAMXC,QAAAA,WANW;AAOXC,QAAAA,eAPW;AAQXC,QAAAA,aARW;AASXC,QAAAA;AATW,OAAb;AAWA,UAAMU,QAAQ,GAAG,IAAIH,IAAI,CAACI,MAAT,CAAgBP,KAAhB,EAAuBb,MAAvB,EAA+BkB,IAA/B,CAAjB;AACAR,MAAAA,GAAG,CAACW,UAAJ,CAAeF,QAAf;AACAP,MAAAA,SAAS,CAACO,QAAD,CAAT;AACD,KApBW,CAqBZ;;AACD,GAtBM,EAsBJ,CAACT,GAAD,EAAMC,MAAN,CAtBI,CAAP;AAwBAhB,EAAAA,WAAW,CAACgB,MAAD,EAAUb,KAAV,CAAX;AACAF,EAAAA,kBAAkB,CAAyBe,MAAzB,EAAkCb,KAAlC,EAAyC,CACzD,OADyD,EAEzD,UAFyD,EAGzD,WAHyD,EAIzD,SAJyD,EAKzD,UALyD,EAMzD,WANyD,EAOzD,QAPyD,EAQzD,YARyD,CAAzC,CAAlB;AAUAL,EAAAA,mBAAmB,CAAyBkB,MAAzB,EAAkCb,KAAlC,EAAyC,CAAC,SAAD,EAAY,WAAZ,CAAzC,CAAnB;AACAJ,EAAAA,aAAa,CAAyBiB,MAAzB,EAAkCb,KAAlC,EAAyC,CACpD,QADoD,EAEpD,QAFoD,EAGpD,aAHoD,EAIpD,WAJoD,EAKpD,eALoD,EAMpD,aANoD,EAOpD,cAPoD,EAQpD,aARoD,CAAzC,CAAb;AAWA,SAAO;AACLa,IAAAA,MADK;AAELC,IAAAA;AAFK,GAAP;AAID",
  "sourcesContent": [
    "import { useState, useMemo } from 'react';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\nimport { useEnableProperties, useProperties, useVisiable, useEventProperties } from '@uiw/react-baidu-map-utils';\nimport { CircleProps } from './';\n\nexport interface UseCircle extends CircleProps {}\n\nexport function useCircle(props = {} as UseCircle) {\n  const {\n    center,\n    radius,\n    strokeColor,\n    fillColor,\n    strokeWeight,\n    strokeOpacity,\n    fillOpacity,\n    strokeStyle,\n    enableMassClear,\n    enableEditing,\n    enableClicking,\n  } = props;\n  const { map } = useMapContext();\n  const [circle, setCircle] = useState<BMap.Circle>();\n\n  useMemo(() => {\n    if (map && !circle) {\n      let point = center;\n      if (center && center.lng && center.lat) {\n        point = new BMap.Point(center.lng, center.lat);\n      }\n      const opts = {\n        strokeColor,\n        fillColor,\n        strokeWeight,\n        strokeOpacity,\n        fillOpacity,\n        strokeStyle,\n        enableMassClear,\n        enableEditing,\n        enableClicking,\n      };\n      const instance = new BMap.Circle(point, radius, opts);\n      map.addOverlay(instance);\n      setCircle(instance);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map, circle]);\n\n  useVisiable(circle!, props);\n  useEventProperties<BMap.Circle, UseCircle>(circle!, props, [\n    'Click',\n    'DblClick',\n    'MouseDown',\n    'MouseUp',\n    'MouseOut',\n    'MouseOver',\n    'Remove',\n    'LineUpdate',\n  ]);\n  useEnableProperties<BMap.Circle, UseCircle>(circle!, props, ['Editing', 'MassClear']);\n  useProperties<BMap.Circle, UseCircle>(circle!, props, [\n    'Center',\n    'Radius',\n    'StrokeColor',\n    'FillColor',\n    'StrokeOpacity',\n    'FillOpacity',\n    'StrokeWeight',\n    'StrokeStyle',\n  ]);\n\n  return {\n    circle,\n    setCircle,\n  };\n}\n"
  ]
}