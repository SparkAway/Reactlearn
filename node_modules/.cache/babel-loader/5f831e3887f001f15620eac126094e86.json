{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\nimport { useProperties, useVisiable, useRenderDom } from '@uiw/react-baidu-map-utils';\nimport getControl from './getControl';\nexport function useControl(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var {\n    container\n  } = useRenderDom({\n    children: props.children\n  });\n  var [control, setControl] = useState();\n  var {\n    offset,\n    anchor\n  } = props;\n  var {\n    map\n  } = useMapContext();\n  useEffect(() => {\n    if (map && !control && props.children) {\n      var _Control = getControl();\n\n      var instance = new _Control(container, anchor, offset);\n      setControl(instance);\n      map.addOverlay(instance);\n    }\n\n    return () => {\n      if (map && control) () => {\n        map.removeControl(control);\n      };\n    };\n  }, [map, control, anchor, offset, container, props.children]);\n  useVisiable(control, props);\n  useProperties(control, props, ['Anchor', 'Offset']);\n  return {\n    control,\n    setControl\n  };\n}","map":{"version":3,"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,YAArC,QAAyD,4BAAzD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAKA,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAA8C;AAAA,MAA1BA,KAA0B;AAA1BA,SAA0B,GAAlB,EAARA;AAA0B;;AACnD,MAAM;AAAEC;AAAF,MAAgBJ,YAAY,CAAC;AAAEK,YAAQ,EAAEF,KAAK,CAACE;AAAlB,GAAD,CAAlC;AACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,EAAtC;AACA,MAAM;AAAEa,UAAF;AAAUC;AAAV,MAAqBN,KAA3B;AACA,MAAM;AAAEO;AAAF,MAAUb,aAAa,EAA7B;AAEAD,WAAS,CAAC,MAAM;AACd,QAAIc,GAAG,IAAI,CAACJ,OAARI,IAAmBP,KAAK,CAACE,QAA7B,EAAuC;AACrC,UAAMM,QAAO,GAAGV,UAAU,EAA1B;;AACA,UAAMW,QAAQ,GAAG,IAAID,QAAJ,CAAYP,SAAZ,EAAuBK,MAAvB,EAA+BD,MAA/B,CAAjB;AACAD,gBAAU,CAACK,QAAD,CAAVL;AACAG,SAAG,CAACG,UAAJH,CAAeE,QAAfF;AACD;;AACD,WAAO,MAAM;AACX,UAAIA,GAAG,IAAIJ,OAAX,EACE,MAAM;AACJI,WAAG,CAACI,aAAJJ,CAAkBJ,OAAlBI;AADF;AAFJ;AAPO,KAaN,CAACA,GAAD,EAAMJ,OAAN,EAAeG,MAAf,EAAuBD,MAAvB,EAA+BJ,SAA/B,EAA0CD,KAAK,CAACE,QAAhD,CAbM,CAATT;AAeAG,aAAW,CAACO,OAAD,EAAWH,KAAX,CAAXJ;AACAD,eAAa,CAA2BQ,OAA3B,EAAqCH,KAArC,EAA4C,CAAC,QAAD,EAAW,QAAX,CAA5C,CAAbL;AACA,SAAO;AACLQ,WADK;AAELC;AAFK,GAAP;AAID","names":["useState","useEffect","useMapContext","useProperties","useVisiable","useRenderDom","getControl","useControl","props","container","children","control","setControl","offset","anchor","map","Control","instance","addOverlay","removeControl"],"sources":["D:\\HB\\ReactProject\\22_3_8\\backboot\\node_modules\\@uiw\\react-baidu-map-control\\src\\useControl.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\nimport { useProperties, useVisiable, useRenderDom } from '@uiw/react-baidu-map-utils';\nimport getControl from './getControl';\nimport { ControlProps } from './';\n\nexport interface UseControl extends ControlProps {}\n\nexport function useControl(props = {} as UseControl) {\n  const { container } = useRenderDom({ children: props.children });\n  const [control, setControl] = useState<BMap.Control>();\n  const { offset, anchor } = props;\n  const { map } = useMapContext();\n\n  useEffect(() => {\n    if (map && !control && props.children) {\n      const Control = getControl();\n      const instance = new Control(container, anchor, offset);\n      setControl(instance);\n      map.addOverlay(instance);\n    }\n    return () => {\n      if (map && control)\n        () => {\n          map.removeControl(control);\n        };\n    };\n  }, [map, control, anchor, offset, container, props.children]);\n\n  useVisiable(control!, props);\n  useProperties<BMap.Control, UseControl>(control!, props, ['Anchor', 'Offset']);\n  return {\n    control,\n    setControl,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}