{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { useImperativeHandle, useEffect } from 'react';\nimport { useTileLayer } from './useTileLayer';\nexport * from './useTileLayer';\nexport default /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n    tileLayer,\n    setVisiable\n  } = useTileLayer(props); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  useImperativeHandle(ref, () => _extends({}, props, {\n    tileLayer\n  }), [tileLayer]); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  useEffect(() => setVisiable(props.visiable), [props.visiable]);\n  return null;\n});","map":{"version":3,"mappings":";AAAA,OAAOA,KAAP,IAAgBC,mBAAhB,EAAqCC,SAArC,QAAsD,OAAtD;AAEA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,cAAc,gBAAd;AAMA,4BAAeH,KAAK,CAACI,UAANJ,CAAiD,CAACK,KAAD,EAAQC,GAAR,KAAgB;AAC9E,MAAM;AAAEC,aAAF;AAAaC;AAAb,MAA6BL,YAAY,CAACE,KAAD,CAA/C,CAD8E,CAE9E;;AACAJ,qBAAmB,CAACK,GAAD,EAAM,mBAAYD,KAAZ;AAAmBE;AAAnB,IAAN,EAAuC,CAACA,SAAD,CAAvC,CAAnBN,CAH8E,CAI9E;;AACAC,WAAS,CAAC,MAAMM,WAAW,CAACH,KAAK,CAACI,QAAP,CAAlB,EAAqC,CAACJ,KAAK,CAACI,QAAP,CAArC,CAATP;AACA,SAAO,IAAP;AANa,EAAf","names":["React","useImperativeHandle","useEffect","useTileLayer","forwardRef","props","ref","tileLayer","setVisiable","visiable"],"sources":["D:\\HB\\ReactProject\\22_3_8\\backboot\\node_modules\\@uiw\\react-baidu-map-tile-layer\\src\\index.tsx"],"sourcesContent":["import React, { useImperativeHandle, useEffect } from 'react';\nimport { OverlayProps } from '@uiw/react-baidu-map-map';\nimport { useTileLayer } from './useTileLayer';\n\nexport * from './useTileLayer';\n\nexport interface TileLayerProps extends OverlayProps, BMap.TileLayerOptions, BMap.TileLayer {\n  visiable?: boolean;\n}\n\nexport default React.forwardRef<TileLayerProps, TileLayerProps>((props, ref) => {\n  const { tileLayer, setVisiable } = useTileLayer(props);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useImperativeHandle(ref, () => ({ ...props, tileLayer }), [tileLayer]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => setVisiable(props.visiable!), [props.visiable]);\n  return null;\n});\n"]},"metadata":{},"sourceType":"module"}