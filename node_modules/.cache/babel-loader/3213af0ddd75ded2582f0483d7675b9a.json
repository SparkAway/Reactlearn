{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\n/**\n * https://lbsyun.baidu.com/jsdemo.htm#g0_2\n */\n\nexport function useTileLayer(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var [tileLayer, setTileLayer] = useState();\n  var {\n    transparentPng = true,\n    tileUrlTemplate,\n    copyright,\n    zIndex\n  } = props;\n  var {\n    map\n  } = useMapContext();\n  useEffect(() => {\n    if (map && !tileLayer) {\n      var instance = new BMap.TileLayer({\n        transparentPng,\n        tileUrlTemplate,\n        copyright,\n        zIndex\n      });\n\n      if (!!props.getTilesUrl) {\n        instance.getTilesUrl = props.getTilesUrl;\n      }\n\n      if (!!props.getCopyright) {\n        instance.getCopyright = props.getCopyright;\n      }\n\n      map.addTileLayer(instance);\n      setTileLayer(instance);\n      return () => {\n        if (instance) {\n          map.removeTileLayer(instance);\n        }\n      };\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [map]);\n  var [visiable, setVisiable] = useState(props.visiable);\n  useEffect(() => {\n    if (map && tileLayer) {\n      visiable ? map.addTileLayer(tileLayer) : map.removeTileLayer(tileLayer);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [visiable, map]);\n  return {\n    tileLayer,\n    setTileLayer,\n    visiable,\n    setVisiable\n  };\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AAIA;AACA;AACA;;AACA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAAkD;AAAA,MAA5BA,KAA4B;AAA5BA,SAA4B,GAApB,EAARA;AAA4B;;AACvD,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,EAA1C;AACA,MAAM;AAAEM,kBAAc,GAAG,IAAnB;AAAyBC,mBAAzB;AAA0CC,aAA1C;AAAqDC;AAArD,MAAgEN,KAAtE;AACA,MAAM;AAAEO;AAAF,MAAUT,aAAa,EAA7B;AAEAF,WAAS,CAAC,MAAM;AACd,QAAIW,GAAG,IAAI,CAACN,SAAZ,EAAuB;AACrB,UAAMO,QAAQ,GAAG,IAAIC,IAAI,CAACC,SAAT,CAAmB;AAClCP,sBADkC;AAElCC,uBAFkC;AAGlCC,iBAHkC;AAIlCC;AAJkC,OAAnB,CAAjB;;AAMA,UAAI,CAAC,CAACN,KAAK,CAACW,WAAZ,EAAyB;AACvBH,gBAAQ,CAACG,WAATH,GAAuBR,KAAK,CAACW,WAA7BH;AACD;;AACD,UAAI,CAAC,CAACR,KAAK,CAACY,YAAZ,EAA0B;AACxBJ,gBAAQ,CAACI,YAATJ,GAAwBR,KAAK,CAACY,YAA9BJ;AACD;;AACDD,SAAG,CAACM,YAAJN,CAAiBC,QAAjBD;AACAL,kBAAY,CAACM,QAAD,CAAZN;AACA,aAAO,MAAM;AACX,YAAIM,QAAJ,EAAc;AACZD,aAAG,CAACO,eAAJP,CAAoBC,QAApBD;AACD;AAHH;AAhBY,MAsBd;;AAtBO,KAuBN,CAACA,GAAD,CAvBM,CAATX;AAyBA,MAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAACG,KAAK,CAACe,QAAP,CAAxC;AACAnB,WAAS,CAAC,MAAM;AACd,QAAIW,GAAG,IAAIN,SAAX,EAAsB;AACpBc,cAAQ,GAAGR,GAAG,CAACM,YAAJN,CAAiBN,SAAjBM,CAAH,GAAiCA,GAAG,CAACO,eAAJP,CAAoBN,SAApBM,CAAzCQ;AAFY,MAId;;AAJO,KAKN,CAACA,QAAD,EAAWR,GAAX,CALM,CAATX;AAOA,SAAO;AACLK,aADK;AAELC,gBAFK;AAGLa,YAHK;AAILC;AAJK,GAAP;AAMD","names":["useEffect","useState","useMapContext","useTileLayer","props","tileLayer","setTileLayer","transparentPng","tileUrlTemplate","copyright","zIndex","map","instance","BMap","TileLayer","getTilesUrl","getCopyright","addTileLayer","removeTileLayer","visiable","setVisiable"],"sources":["D:\\HB\\ReactProject\\22_3_8\\backboot\\node_modules\\@uiw\\react-baidu-map-tile-layer\\src\\useTileLayer.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\nimport { TileLayerProps } from './';\n\nexport interface UseTileLayer extends TileLayerProps {}\n/**\n * https://lbsyun.baidu.com/jsdemo.htm#g0_2\n */\nexport function useTileLayer(props = {} as UseTileLayer) {\n  const [tileLayer, setTileLayer] = useState<BMap.TileLayer>();\n  const { transparentPng = true, tileUrlTemplate, copyright, zIndex } = props;\n  const { map } = useMapContext();\n\n  useEffect(() => {\n    if (map && !tileLayer) {\n      const instance = new BMap.TileLayer({\n        transparentPng,\n        tileUrlTemplate,\n        copyright,\n        zIndex,\n      });\n      if (!!props.getTilesUrl) {\n        instance.getTilesUrl = props.getTilesUrl;\n      }\n      if (!!props.getCopyright) {\n        instance.getCopyright = props.getCopyright;\n      }\n      map.addTileLayer(instance);\n      setTileLayer(instance);\n      return () => {\n        if (instance) {\n          map.removeTileLayer(instance);\n        }\n      };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map]);\n\n  const [visiable, setVisiable] = useState(props.visiable);\n  useEffect(() => {\n    if (map && tileLayer) {\n      visiable ? map.addTileLayer(tileLayer) : map.removeTileLayer(tileLayer);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [visiable, map]);\n\n  return {\n    tileLayer,\n    setTileLayer,\n    visiable,\n    setVisiable,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}