{"ast":null,"code":"import { useState, useMemo } from 'react';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\nimport { useEnableProperties, useProperties, useVisiable, useEventProperties } from '@uiw/react-baidu-map-utils';\nexport function useCircle(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var {\n    center,\n    radius,\n    strokeColor,\n    fillColor,\n    strokeWeight,\n    strokeOpacity,\n    fillOpacity,\n    strokeStyle,\n    enableMassClear,\n    enableEditing,\n    enableClicking\n  } = props;\n  var {\n    map\n  } = useMapContext();\n  var [circle, setCircle] = useState();\n  useMemo(() => {\n    if (map && !circle) {\n      var point = center;\n\n      if (center && center.lng && center.lat) {\n        point = new BMap.Point(center.lng, center.lat);\n      }\n\n      var opts = {\n        strokeColor,\n        fillColor,\n        strokeWeight,\n        strokeOpacity,\n        fillOpacity,\n        strokeStyle,\n        enableMassClear,\n        enableEditing,\n        enableClicking\n      };\n      var instance = new BMap.Circle(point, radius, opts);\n      map.addOverlay(instance);\n      setCircle(instance);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [map, circle]);\n  useVisiable(circle, props);\n  useEventProperties(circle, props, ['Click', 'DblClick', 'MouseDown', 'MouseUp', 'MouseOut', 'MouseOver', 'Remove', 'LineUpdate']);\n  useEnableProperties(circle, props, ['Editing', 'MassClear']);\n  useProperties(circle, props, ['Center', 'Radius', 'StrokeColor', 'FillColor', 'StrokeOpacity', 'FillOpacity', 'StrokeWeight', 'StrokeStyle']);\n  return {\n    circle,\n    setCircle\n  };\n}","map":{"version":3,"mappings":"AAAA,SAASA,QAAT,EAAmBC,OAAnB,QAAkC,OAAlC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,mBAAT,EAA8BC,aAA9B,EAA6CC,WAA7C,EAA0DC,kBAA1D,QAAoF,4BAApF;AAKA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA4C;AAAA,MAAzBA,KAAyB;AAAzBA,SAAyB,GAAjB,EAARA;AAAyB;;AACjD,MAAM;AACJC,UADI;AAEJC,UAFI;AAGJC,eAHI;AAIJC,aAJI;AAKJC,gBALI;AAMJC,iBANI;AAOJC,eAPI;AAQJC,eARI;AASJC,mBATI;AAUJC,iBAVI;AAWJC;AAXI,MAYFX,KAZJ;AAaA,MAAM;AAAEY;AAAF,MAAUlB,aAAa,EAA7B;AACA,MAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBtB,QAAQ,EAApC;AAEAC,SAAO,CAAC,MAAM;AACZ,QAAImB,GAAG,IAAI,CAACC,MAAZ,EAAoB;AAClB,UAAIE,KAAK,GAAGd,MAAZ;;AACA,UAAIA,MAAM,IAAIA,MAAM,CAACe,GAAjBf,IAAwBA,MAAM,CAACgB,GAAnC,EAAwC;AACtCF,aAAK,GAAG,IAAIG,IAAI,CAACC,KAAT,CAAelB,MAAM,CAACe,GAAtB,EAA2Bf,MAAM,CAACgB,GAAlC,CAARF;AACD;;AACD,UAAMK,IAAI,GAAG;AACXjB,mBADW;AAEXC,iBAFW;AAGXC,oBAHW;AAIXC,qBAJW;AAKXC,mBALW;AAMXC,mBANW;AAOXC,uBAPW;AAQXC,qBARW;AASXC;AATW,OAAb;AAWA,UAAMU,QAAQ,GAAG,IAAIH,IAAI,CAACI,MAAT,CAAgBP,KAAhB,EAAuBb,MAAvB,EAA+BkB,IAA/B,CAAjB;AACAR,SAAG,CAACW,UAAJX,CAAeS,QAAfT;AACAE,eAAS,CAACO,QAAD,CAATP;AAnBU,MAqBZ;;AArBK,KAsBJ,CAACF,GAAD,EAAMC,MAAN,CAtBI,CAAPpB;AAwBAI,aAAW,CAACgB,MAAD,EAAUb,KAAV,CAAXH;AACAC,oBAAkB,CAAyBe,MAAzB,EAAkCb,KAAlC,EAAyC,CACzD,OADyD,EAEzD,UAFyD,EAGzD,WAHyD,EAIzD,SAJyD,EAKzD,UALyD,EAMzD,WANyD,EAOzD,QAPyD,EAQzD,YARyD,CAAzC,CAAlBF;AAUAH,qBAAmB,CAAyBkB,MAAzB,EAAkCb,KAAlC,EAAyC,CAAC,SAAD,EAAY,WAAZ,CAAzC,CAAnBL;AACAC,eAAa,CAAyBiB,MAAzB,EAAkCb,KAAlC,EAAyC,CACpD,QADoD,EAEpD,QAFoD,EAGpD,aAHoD,EAIpD,WAJoD,EAKpD,eALoD,EAMpD,aANoD,EAOpD,cAPoD,EAQpD,aARoD,CAAzC,CAAbJ;AAWA,SAAO;AACLiB,UADK;AAELC;AAFK,GAAP;AAID","names":["useState","useMemo","useMapContext","useEnableProperties","useProperties","useVisiable","useEventProperties","useCircle","props","center","radius","strokeColor","fillColor","strokeWeight","strokeOpacity","fillOpacity","strokeStyle","enableMassClear","enableEditing","enableClicking","map","circle","setCircle","point","lng","lat","BMap","Point","opts","instance","Circle","addOverlay"],"sources":["D:\\HB\\ReactProject\\22_3_8\\backboot\\node_modules\\@uiw\\react-baidu-map-circle\\src\\useCircle.tsx"],"sourcesContent":["import { useState, useMemo } from 'react';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\nimport { useEnableProperties, useProperties, useVisiable, useEventProperties } from '@uiw/react-baidu-map-utils';\nimport { CircleProps } from './';\n\nexport interface UseCircle extends CircleProps {}\n\nexport function useCircle(props = {} as UseCircle) {\n  const {\n    center,\n    radius,\n    strokeColor,\n    fillColor,\n    strokeWeight,\n    strokeOpacity,\n    fillOpacity,\n    strokeStyle,\n    enableMassClear,\n    enableEditing,\n    enableClicking,\n  } = props;\n  const { map } = useMapContext();\n  const [circle, setCircle] = useState<BMap.Circle>();\n\n  useMemo(() => {\n    if (map && !circle) {\n      let point = center;\n      if (center && center.lng && center.lat) {\n        point = new BMap.Point(center.lng, center.lat);\n      }\n      const opts = {\n        strokeColor,\n        fillColor,\n        strokeWeight,\n        strokeOpacity,\n        fillOpacity,\n        strokeStyle,\n        enableMassClear,\n        enableEditing,\n        enableClicking,\n      };\n      const instance = new BMap.Circle(point, radius, opts);\n      map.addOverlay(instance);\n      setCircle(instance);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map, circle]);\n\n  useVisiable(circle!, props);\n  useEventProperties<BMap.Circle, UseCircle>(circle!, props, [\n    'Click',\n    'DblClick',\n    'MouseDown',\n    'MouseUp',\n    'MouseOut',\n    'MouseOver',\n    'Remove',\n    'LineUpdate',\n  ]);\n  useEnableProperties<BMap.Circle, UseCircle>(circle!, props, ['Editing', 'MassClear']);\n  useProperties<BMap.Circle, UseCircle>(circle!, props, [\n    'Center',\n    'Radius',\n    'StrokeColor',\n    'FillColor',\n    'StrokeOpacity',\n    'FillOpacity',\n    'StrokeWeight',\n    'StrokeStyle',\n  ]);\n\n  return {\n    circle,\n    setCircle,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}