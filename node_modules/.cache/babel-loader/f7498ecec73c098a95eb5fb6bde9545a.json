{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\nimport { useProperties, useVisiable } from '@uiw/react-baidu-map-utils';\nexport function useNavigationControl(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var [navigationControl, setNavigationControl] = useState();\n  var {\n    anchor,\n    offset,\n    type,\n    showZoomInfo,\n    enableGeolocation\n  } = props;\n  var {\n    map\n  } = useMapContext();\n  useEffect(() => {\n    if (!map || navigationControl) return;\n    var instance = new BMap.NavigationControl({\n      anchor: anchor || BMAP_ANCHOR_TOP_LEFT,\n      offset,\n      type,\n      showZoomInfo,\n      enableGeolocation\n    });\n    map.addControl(instance);\n    setNavigationControl(instance);\n    return () => {\n      if (map && instance) {\n        map.removeControl(instance);\n      }\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map]);\n  useVisiable(navigationControl, props);\n  useProperties(navigationControl, props, ['Anchor', 'Offset', 'Type']);\n  return {\n    navigationControl,\n    setNavigationControl\n  };\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,4BAA3C;AAKA,OAAO,SAASC,oBAAT,CAA8BC,KAA9B,EAAkE;AAAA,MAApCA,KAAoC;AAApCA,SAAoC,GAA5B,EAARA;AAAoC;;AACvE,MAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CP,QAAQ,EAA1D;AACA,MAAM;AAAEQ,UAAF;AAAUC,UAAV;AAAkBC,QAAlB;AAAwBC,gBAAxB;AAAsCC;AAAtC,MAA4DP,KAAlE;AACA,MAAM;AAAEQ;AAAF,MAAUZ,aAAa,EAA7B;AACAF,WAAS,CAAC,MAAM;AACd,QAAI,CAACc,GAAD,IAAQP,iBAAZ,EAA+B;AAC/B,QAAMQ,QAAQ,GAAG,IAAIC,IAAI,CAACC,iBAAT,CAA2B;AAC1CR,YAAM,EAAEA,MAAM,IAAIS,oBADwB;AAE1CR,YAF0C;AAG1CC,UAH0C;AAI1CC,kBAJ0C;AAK1CC;AAL0C,KAA3B,CAAjB;AAOAC,OAAG,CAACK,UAAJL,CAAeC,QAAfD;AACAN,wBAAoB,CAACO,QAAD,CAApBP;AACA,WAAO,MAAM;AACX,UAAIM,GAAG,IAAIC,QAAX,EAAqB;AACnBD,WAAG,CAACM,aAAJN,CAAkBC,QAAlBD;AACD;AAHH,MAXc,CAgBd;AAhBO,KAiBN,CAACA,GAAD,CAjBM,CAATd;AAmBAI,aAAW,CAACG,iBAAD,EAAqBD,KAArB,CAAXF;AACAD,eAAa,CAA+CI,iBAA/C,EAAmED,KAAnE,EAA0E,CAAC,QAAD,EAAW,QAAX,EAAqB,MAArB,CAA1E,CAAbH;AACA,SAAO;AACLI,qBADK;AAELC;AAFK,GAAP;AAID","names":["useEffect","useState","useMapContext","useProperties","useVisiable","useNavigationControl","props","navigationControl","setNavigationControl","anchor","offset","type","showZoomInfo","enableGeolocation","map","instance","BMap","NavigationControl","BMAP_ANCHOR_TOP_LEFT","addControl","removeControl"],"sources":["D:\\HB\\ReactProject\\22_3_8\\backboot\\node_modules\\@uiw\\react-baidu-map-navigation-control\\src\\useNavigationControl.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\nimport { useProperties, useVisiable } from '@uiw/react-baidu-map-utils';\nimport { NavigationControlProps } from './';\n\nexport interface UseNavigationControl extends NavigationControlProps {}\n\nexport function useNavigationControl(props = {} as UseNavigationControl) {\n  const [navigationControl, setNavigationControl] = useState<BMap.NavigationControl>();\n  const { anchor, offset, type, showZoomInfo, enableGeolocation } = props;\n  const { map } = useMapContext();\n  useEffect(() => {\n    if (!map || navigationControl) return;\n    const instance = new BMap.NavigationControl({\n      anchor: anchor || BMAP_ANCHOR_TOP_LEFT,\n      offset,\n      type,\n      showZoomInfo,\n      enableGeolocation,\n    });\n    map.addControl(instance);\n    setNavigationControl(instance);\n    return () => {\n      if (map && instance) {\n        map.removeControl(instance);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map]);\n\n  useVisiable(navigationControl!, props);\n  useProperties<BMap.NavigationControl, UseNavigationControl>(navigationControl!, props, ['Anchor', 'Offset', 'Type']);\n  return {\n    navigationControl,\n    setNavigationControl,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}