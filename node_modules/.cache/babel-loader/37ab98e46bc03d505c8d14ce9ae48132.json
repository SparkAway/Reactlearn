{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport { useEffect, useState } from 'react';\nimport { useRenderDom, useEnableProperties, useProperties, useVisiable, useEventProperties } from '@uiw/react-baidu-map-utils';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\nexport function useLabel(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var [label, setLabel] = useState();\n  var {\n    offset,\n    style,\n    content = '',\n    position,\n    enableMassClear\n  } = props;\n  var {\n    container\n  } = useRenderDom({\n    children: props.children\n  });\n  var {\n    map\n  } = useMapContext();\n  useEffect(() => {\n    if (!BMap || !map) return;\n\n    if (!label) {\n      var opts = {\n        offset,\n        position,\n        enableMassClear\n      };\n      var instance = new BMap.Label(props.children ? container.innerHTML : content, opts);\n      instance.setStyle(_extends({}, style));\n      map.addOverlay(instance);\n      setLabel(instance);\n    }\n\n    return () => {\n      if (map && label) {\n        map.removeOverlay(label);\n      }\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map]);\n  useEffect(() => {\n    if (label) {\n      label.setContent(props.children ? container.innerHTML : content);\n    }\n  }, [props.children, container, label]);\n  useVisiable(label, props);\n  useEventProperties(label, props, ['Click', 'DblClick', 'MouseDo', 'MouseUp', 'MouseOout', 'MouseO', 'Remove', 'RightClick']);\n  useProperties(label, props, ['Style', 'Position', 'Offset', 'Title', 'ZIndex']);\n  useEnableProperties(label, props, ['MassClear']);\n  return {\n    label,\n    setLabel\n  };\n}","map":{"version":3,"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SACEC,YADF,EAEEC,mBAFF,EAGEC,aAHF,EAIEC,WAJF,EAKEC,kBALF,QAMO,4BANP;AAOA,SAASC,aAAT,QAA8B,0BAA9B;AAKA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAA0C;AAAA,MAAxBA,KAAwB;AAAxBA,SAAwB,GAAhB,EAARA;AAAwB;;AAC/C,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,EAAlC;AACA,MAAM;AAAEW,UAAF;AAAUC,SAAV;AAAiBC,WAAO,GAAG,EAA3B;AAA+BC,YAA/B;AAAyCC;AAAzC,MAA6DP,KAAnE;AACA,MAAM;AAAEQ;AAAF,MAAgBf,YAAY,CAAC;AAAEgB,YAAQ,EAAET,KAAK,CAACS;AAAlB,GAAD,CAAlC;AACA,MAAM;AAAEC;AAAF,MAAUZ,aAAa,EAA7B;AAEAP,WAAS,CAAC,MAAM;AACd,QAAI,CAACoB,IAAD,IAAS,CAACD,GAAd,EAAmB;;AACnB,QAAI,CAACT,KAAL,EAAY;AACV,UAAMW,IAAI,GAAG;AAAET,cAAF;AAAUG,gBAAV;AAAoBC;AAApB,OAAb;AACA,UAAMM,QAAQ,GAAG,IAAIF,IAAI,CAACG,KAAT,CAAed,KAAK,CAACS,QAANT,GAAiBQ,SAAS,CAACO,SAA3Bf,GAAuCK,OAAtD,EAA+DO,IAA/D,CAAjB;AACAC,cAAQ,CAACG,QAATH,cAAuBT,KAAvB;AACAM,SAAG,CAACO,UAAJP,CAAeG,QAAfH;AACAR,cAAQ,CAACW,QAAD,CAARX;AACD;;AACD,WAAO,MAAM;AACX,UAAIQ,GAAG,IAAIT,KAAX,EAAkB;AAChBS,WAAG,CAACQ,aAAJR,CAAkBT,KAAlBS;AACD;AAHH,MATc,CAcd;AAdO,KAeN,CAACA,GAAD,CAfM,CAATnB;AAiBAA,WAAS,CAAC,MAAM;AACd,QAAIU,KAAJ,EAAW;AACTA,WAAK,CAACkB,UAANlB,CAAiBD,KAAK,CAACS,QAANT,GAAiBQ,SAAS,CAACO,SAA3Bf,GAAuCK,OAAxDJ;AACD;AAHM,KAIN,CAACD,KAAK,CAACS,QAAP,EAAiBD,SAAjB,EAA4BP,KAA5B,CAJM,CAATV;AAMAK,aAAW,CAACK,KAAD,EAASD,KAAT,CAAXJ;AACAC,oBAAkB,CAAuBI,KAAvB,EAA+BD,KAA/B,EAAsC,CACtD,OADsD,EAEtD,UAFsD,EAGtD,SAHsD,EAItD,SAJsD,EAKtD,WALsD,EAMtD,QANsD,EAOtD,QAPsD,EAQtD,YARsD,CAAtC,CAAlBH;AAUAF,eAAa,CAAuBM,KAAvB,EAA+BD,KAA/B,EAAsC,CAAC,OAAD,EAAU,UAAV,EAAsB,QAAtB,EAAgC,OAAhC,EAAyC,QAAzC,CAAtC,CAAbL;AACAD,qBAAmB,CAAuBO,KAAvB,EAA+BD,KAA/B,EAAsC,CAAC,WAAD,CAAtC,CAAnBN;AAEA,SAAO;AACLO,SADK;AAELC;AAFK,GAAP;AAID","names":["useEffect","useState","useRenderDom","useEnableProperties","useProperties","useVisiable","useEventProperties","useMapContext","useLabel","props","label","setLabel","offset","style","content","position","enableMassClear","container","children","map","BMap","opts","instance","Label","innerHTML","setStyle","addOverlay","removeOverlay","setContent"],"sources":["D:\\HB\\ReactProject\\22_3_8\\backboot\\node_modules\\@uiw\\react-baidu-map-label\\src\\useLabel.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport {\n  useRenderDom,\n  useEnableProperties,\n  useProperties,\n  useVisiable,\n  useEventProperties,\n} from '@uiw/react-baidu-map-utils';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\nimport { LabelProps } from './';\n\nexport interface UseLabel extends LabelProps {}\n\nexport function useLabel(props = {} as UseLabel) {\n  const [label, setLabel] = useState<BMap.Label>();\n  const { offset, style, content = '', position, enableMassClear } = props;\n  const { container } = useRenderDom({ children: props.children });\n  const { map } = useMapContext();\n\n  useEffect(() => {\n    if (!BMap || !map) return;\n    if (!label) {\n      const opts = { offset, position, enableMassClear };\n      const instance = new BMap.Label(props.children ? container.innerHTML : content, opts);\n      instance.setStyle({ ...style });\n      map.addOverlay(instance);\n      setLabel(instance);\n    }\n    return () => {\n      if (map && label) {\n        map.removeOverlay(label);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map]);\n\n  useEffect(() => {\n    if (label) {\n      label.setContent(props.children ? container.innerHTML : content);\n    }\n  }, [props.children, container, label]);\n\n  useVisiable(label!, props);\n  useEventProperties<BMap.Label, UseLabel>(label!, props, [\n    'Click',\n    'DblClick',\n    'MouseDo',\n    'MouseUp',\n    'MouseOout',\n    'MouseO',\n    'Remove',\n    'RightClick',\n  ]);\n  useProperties<BMap.Label, UseLabel>(label!, props, ['Style', 'Position', 'Offset', 'Title', 'ZIndex']);\n  useEnableProperties<BMap.Label, UseLabel>(label!, props, ['MassClear']);\n\n  return {\n    label,\n    setLabel,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}