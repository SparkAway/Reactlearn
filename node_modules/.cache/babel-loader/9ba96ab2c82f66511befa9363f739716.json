{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\nimport { useProperties, useVisiable } from '@uiw/react-baidu-map-utils';\nexport function useMapTypeControl(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var [mapTypeControl, setMapTypeControl] = useState();\n  var {\n    anchor,\n    offset,\n    type,\n    mapTypes\n  } = props;\n  var {\n    map\n  } = useMapContext();\n  useEffect(() => {\n    if (map && !mapTypeControl) {\n      var instance = new BMap.MapTypeControl({\n        anchor: anchor || BMAP_ANCHOR_TOP_LEFT,\n        offset,\n        type,\n        mapTypes\n      });\n      map.addControl(instance);\n      setMapTypeControl(instance);\n      return () => {\n        map.removeControl(instance);\n      };\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [map]);\n  useVisiable(mapTypeControl, props);\n  useProperties(mapTypeControl, props, ['Anchor', 'Offset', 'Unit']);\n  return {\n    mapTypeControl,\n    setMapTypeControl\n  };\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,4BAA3C;AAKA,OAAO,SAASC,iBAAT,CAA2BC,KAA3B,EAA4D;AAAA,MAAjCA,KAAiC;AAAjCA,SAAiC,GAAzB,EAARA;AAAiC;;AACjE,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,EAApD;AACA,MAAM;AAAEQ,UAAF;AAAUC,UAAV;AAAkBC,QAAlB;AAAwBC;AAAxB,MAAqCN,KAA3C;AACA,MAAM;AAAEO;AAAF,MAAUX,aAAa,EAA7B;AACAF,WAAS,CAAC,MAAM;AACd,QAAIa,GAAG,IAAI,CAACN,cAAZ,EAA4B;AAC1B,UAAMO,QAAQ,GAAG,IAAIC,IAAI,CAACC,cAAT,CAAwB;AACvCP,cAAM,EAAEA,MAAM,IAAIQ,oBADqB;AAEvCP,cAFuC;AAGvCC,YAHuC;AAIvCC;AAJuC,OAAxB,CAAjB;AAMAC,SAAG,CAACK,UAAJL,CAAeC,QAAfD;AACAL,uBAAiB,CAACM,QAAD,CAAjBN;AACA,aAAO,MAAM;AACXK,WAAG,CAACM,aAAJN,CAAkBC,QAAlBD;AADF;AAVY,MAcd;;AAdO,KAeN,CAACA,GAAD,CAfM,CAATb;AAiBAI,aAAW,CAACG,cAAD,EAAkBD,KAAlB,CAAXF;AACAD,eAAa,CAAyCI,cAAzC,EAA0DD,KAA1D,EAAiE,CAAC,QAAD,EAAW,QAAX,EAAqB,MAArB,CAAjE,CAAbH;AACA,SAAO;AACLI,kBADK;AAELC;AAFK,GAAP;AAID","names":["useEffect","useState","useMapContext","useProperties","useVisiable","useMapTypeControl","props","mapTypeControl","setMapTypeControl","anchor","offset","type","mapTypes","map","instance","BMap","MapTypeControl","BMAP_ANCHOR_TOP_LEFT","addControl","removeControl"],"sources":["D:\\HB\\ReactProject\\22_3_8\\backboot\\node_modules\\@uiw\\react-baidu-map-type-control\\src\\useMapTypeControl.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\nimport { useProperties, useVisiable } from '@uiw/react-baidu-map-utils';\nimport { MapTypeControlProps } from './';\n\nexport interface UseMapTypeControl extends MapTypeControlProps {}\n\nexport function useMapTypeControl(props = {} as UseMapTypeControl) {\n  const [mapTypeControl, setMapTypeControl] = useState<BMap.MapTypeControl>();\n  const { anchor, offset, type, mapTypes } = props;\n  const { map } = useMapContext();\n  useEffect(() => {\n    if (map && !mapTypeControl) {\n      const instance = new BMap.MapTypeControl({\n        anchor: anchor || BMAP_ANCHOR_TOP_LEFT,\n        offset,\n        type,\n        mapTypes,\n      });\n      map.addControl(instance);\n      setMapTypeControl(instance);\n      return () => {\n        map.removeControl(instance);\n      };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map]);\n\n  useVisiable(mapTypeControl!, props);\n  useProperties<BMap.MapTypeControl, UseMapTypeControl>(mapTypeControl!, props, ['Anchor', 'Offset', 'Unit']);\n  return {\n    mapTypeControl,\n    setMapTypeControl,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}