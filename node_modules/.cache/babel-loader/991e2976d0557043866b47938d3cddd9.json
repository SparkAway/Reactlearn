{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"position\"];\nimport { useState, useEffect, useMemo } from 'react';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\nimport { useEnableProperties, useProperties, useVisiable, useEventProperties, useRenderDom } from '@uiw/react-baidu-map-utils';\nexport function useInfoWindow(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var {\n    position\n  } = props,\n      opts = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var {\n    container\n  } = useRenderDom({\n    children: props.children\n  });\n  var {\n    container: title\n  } = useRenderDom({\n    children: props.title || ''\n  });\n  var {\n    map\n  } = useMapContext();\n  var [infoWindow, setInfoWindow] = useState();\n  useMemo(() => {\n    if (!infoWindow && map) {\n      opts.title = title;\n      var win = new BMap.InfoWindow(props.children ? container : opts.content || '', _extends({}, opts));\n      setInfoWindow(win);\n    }\n\n    return () => {\n      if (infoWindow) {\n        infoWindow.restore();\n      }\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map]);\n  var [isOpen, setIsOpen] = useState(opts.isOpen === undefined ? true : opts.isOpen);\n  useEffect(() => {\n    if (map && BMap && infoWindow) {\n      if (!isOpen) {\n        map.closeInfoWindow();\n      } else if (position) {\n        var point = new BMap.Point(position.lng, position.lat);\n        map.openInfoWindow(infoWindow, point);\n      }\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [isOpen, infoWindow]);\n  useEffect(() => {\n    if (infoWindow) {\n      infoWindow.setContent(props.children ? container : opts.content || '');\n    }\n  }, [props.content, props.children]);\n  useEffect(() => {\n    if (infoWindow) {\n      infoWindow.setTitle(title);\n    }\n  }, [props.content, title]);\n  useVisiable(infoWindow, props);\n  useEventProperties(infoWindow, props, ['Close', 'Open', 'Maximize', 'Restore', 'ClickClose']);\n  useProperties(infoWindow, props, ['Width', 'Height', 'Title', // 'Content',\n  'MaxContent']);\n  useEnableProperties(infoWindow, props, ['CloseOnClick', 'Maximize', 'AutoPan']);\n  return {\n    /**\n     * 信息窗口实例对象\n     */\n    infoWindow,\n\n    /**\n     * 更新 信息窗口实例对象\n     */\n    setInfoWindow,\n    isOpen,\n    setIsOpen\n  };\n}","map":{"version":3,"mappings":"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","names":["useState","useEffect","useMemo","useMapContext","useEnableProperties","useProperties","useVisiable","useEventProperties","useRenderDom","useInfoWindow","props","position","opts","container","children","title","map","infoWindow","setInfoWindow","win","BMap","InfoWindow","content","restore","isOpen","setIsOpen","undefined","closeInfoWindow","point","Point","lng","lat","openInfoWindow","setContent","setTitle"],"sources":["D:\\HB\\ReactProject\\22_3_8\\backboot\\node_modules\\@uiw\\react-baidu-map-info-window\\src\\useInfoWindow.ts"],"sourcesContent":["import { useState, useEffect, useMemo } from 'react';\nimport { useMapContext } from '@uiw/react-baidu-map-map';\nimport {\n  useEnableProperties,\n  useProperties,\n  useVisiable,\n  useEventProperties,\n  useRenderDom,\n} from '@uiw/react-baidu-map-utils';\nimport { InfoWindowProps } from '.';\n\nexport interface UseInfoWindow extends InfoWindowProps {}\n\nexport function useInfoWindow(props = {} as UseInfoWindow) {\n  const { position, ...opts } = props;\n  const { container } = useRenderDom({ children: props.children });\n  const { container: title } = useRenderDom({ children: props.title || '' });\n  const { map } = useMapContext();\n  const [infoWindow, setInfoWindow] = useState<BMap.InfoWindow>();\n  useMemo(() => {\n    if (!infoWindow && map) {\n      opts.title = title;\n      const win = new BMap.InfoWindow(props.children ? container : opts.content || '', {\n        ...opts,\n      } as BMap.InfoWindowOptions);\n      setInfoWindow(win);\n    }\n    return () => {\n      if (infoWindow) {\n        infoWindow.restore();\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map]);\n\n  const [isOpen, setIsOpen] = useState(opts.isOpen === undefined ? true : opts.isOpen);\n  useEffect(() => {\n    if (map && BMap && infoWindow) {\n      if (!isOpen) {\n        map.closeInfoWindow();\n      } else if (position) {\n        const point = new BMap.Point(position.lng, position.lat);\n        map.openInfoWindow(infoWindow, point);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen, infoWindow]);\n\n  useEffect(() => {\n    if (infoWindow) {\n      infoWindow.setContent(props.children ? container : opts.content || '');\n    }\n  }, [props.content, props.children]);\n\n  useEffect(() => {\n    if (infoWindow) {\n      infoWindow.setTitle(title);\n    }\n  }, [props.content, title]);\n\n  useVisiable(infoWindow!, props);\n  useEventProperties<BMap.InfoWindow, UseInfoWindow>(infoWindow!, props, [\n    'Close',\n    'Open',\n    'Maximize',\n    'Restore',\n    'ClickClose',\n  ]);\n  useProperties<BMap.InfoWindow, UseInfoWindow>(infoWindow!, props, [\n    'Width',\n    'Height',\n    'Title',\n    // 'Content',\n    'MaxContent',\n  ]);\n  useEnableProperties<BMap.InfoWindow, UseInfoWindow>(infoWindow!, props, ['CloseOnClick', 'Maximize', 'AutoPan']);\n\n  return {\n    /**\n     * 信息窗口实例对象\n     */\n    infoWindow,\n    /**\n     * 更新 信息窗口实例对象\n     */\n    setInfoWindow,\n    isOpen,\n    setIsOpen,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}