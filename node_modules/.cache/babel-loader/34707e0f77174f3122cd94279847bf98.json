{"ast":null,"code":"import { useEffect, useState, useMemo, useContext } from 'react';\nimport { useEnableProperties, useProperties, useEventProperties } from '@uiw/react-baidu-map-utils';\nimport { Context } from './context';\nexport function useMap(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var {\n    widget,\n    minZoom,\n    maxZoom,\n    mapType,\n    enableHighResolution,\n    enableAutoResize,\n    enableMapClick\n  } = props;\n  var [map, setMap] = useState();\n  var [zoom, setZoom] = useState(props.zoom || 15);\n  var [container, setContainer] = useState(props.container);\n  var {\n    dispatch\n  } = useContext(Context);\n  useMemo(() => {\n    if (container && !map && BMap) {\n      var instance = new BMap.Map(container, {\n        minZoom,\n        maxZoom,\n        mapType,\n        enableHighResolution,\n        enableAutoResize,\n        enableMapClick\n      });\n      /**\n       * 加载控件\n       */\n\n      widget && widget.forEach(item => {\n        if (!BMap) {\n          return;\n        }\n\n        if (typeof item === 'string') {\n          instance.addControl(new BMap[item]());\n        } else if (typeof item === 'object' && item.control && typeof item.control === 'function') {\n          instance.addControl(item.control(BMap, instance));\n        } else if (typeof item === 'object' && item.name) {\n          var options = typeof item.options === 'function' ? item.options(BMap, instance) : item.options;\n          instance.addControl(new BMap[item.name](options));\n        }\n      });\n      setMap(instance);\n    }\n\n    return () => {\n      if (map) {\n        map.clearOverlays();\n      }\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [container, map]);\n  useEffect(() => {\n    if (map && container) {\n      dispatch({\n        map,\n        container,\n        BMap\n      });\n    }\n\n    return () => {\n      dispatch({\n        map: undefined,\n        container: undefined,\n        BMap: undefined\n      });\n    };\n  }, [map, container]);\n  var [center, setCenter] = useState(props.center || '上海');\n  /**\n   * 根据参数设置中心点\n   */\n\n  useEffect(() => {\n    if (map && center) {\n      var cent = center;\n\n      if (center && center.lng && center.lat) {\n        cent = new BMap.Point(center.lng, center.lat);\n        map.centerAndZoom(cent, zoom);\n      }\n\n      map.centerAndZoom(center, zoom);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [center, map]);\n  var [autoLocalCity, setAutoLocalCity] = useState(props.autoLocalCity);\n  /**\n   * IP定位获取当前城市，进行自动定位\n   */\n\n  useEffect(() => {\n    if (map && autoLocalCity) {\n      var myCity = new BMap.LocalCity();\n      myCity.get(result => {\n        setCenter(result.name);\n        setZoom(result.level);\n        setAutoLocalCity(false);\n      });\n    }\n  }, [autoLocalCity, map]);\n  useEventProperties(map, props, ['Click', 'DblClick', 'RightClick', 'RightdblClick', 'MapTypeChange', 'MouseMove', 'MouseOver', 'MouseOut', 'MoveStart', 'Moving', 'MoveEnd', 'ZoomStart', 'ZoomEnd', 'AddOverlay', 'AddControl', 'RemoveControl', 'RemoveOverlay', 'ClearOverlays', 'DragStart', 'Dragging', 'DragEnd', 'AddTileLayer', 'RemoveTileLayer', 'Load', 'ReSize', 'HotspotClick', 'HotspotOver', 'HotspotOut', 'TilesLoaded', 'TouchStart', 'TouchMove', 'TouchEnd', 'LongPress']); // 'Center',\n\n  useProperties(map, props, ['DefaultCursor', 'DraggingCursor', 'MinZoom', 'MaxZoom', 'MapStyle', 'MapStyleV2', 'Panorama', 'CurrentCity', 'MapType', 'Viewport', 'Zoom']);\n  useEnableProperties(map, props, ['Dragging', 'ScrollWheelZoom', 'DoubleClickZoom', 'Keyboard', 'InertialDragging', 'ContinuousZoom', 'PinchToZoom', 'AutoResize']);\n  return {\n    map,\n    setMap,\n    zoom,\n    setZoom,\n    container,\n    setContainer,\n    center,\n    setCenter,\n    autoLocalCity,\n    setAutoLocalCity\n  };\n}","map":{"version":3,"mappings":"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","names":["useEffect","useState","useMemo","useContext","useEnableProperties","useProperties","useEventProperties","Context","useMap","props","widget","minZoom","maxZoom","mapType","enableHighResolution","enableAutoResize","enableMapClick","map","setMap","zoom","setZoom","container","setContainer","dispatch","BMap","instance","Map","forEach","item","addControl","control","name","options","clearOverlays","undefined","center","setCenter","cent","lng","lat","Point","centerAndZoom","autoLocalCity","setAutoLocalCity","myCity","LocalCity","get","result","level"],"sources":["D:\\HB\\ReactProject\\22_3_8\\backboot\\node_modules\\@uiw\\react-baidu-map-map\\src\\useMap.tsx"],"sourcesContent":["import { useEffect, useState, useMemo, useContext } from 'react';\nimport { useEnableProperties, useProperties, useEventProperties } from '@uiw/react-baidu-map-utils';\nimport { MapProps } from './';\nimport { Context } from './context';\n\nexport interface OverlayProps extends MapChildProps {\n  /**\n   * 覆盖物是否可见\n   */\n  visiable?: boolean;\n}\n\n/**\n * 此类型是 `<Map>` 组件传递给子组件(如 `<Marker>`)的两个 `props`\n */\nexport interface MapChildProps {\n  /**\n   * 地图API的核心类，SDK加载完成才有\n   */\n  BMap?: typeof BMap;\n  /**\n   * 实例化后的地图对象\n   */\n  map?: BMap.Map;\n}\n\nexport interface UseMap extends MapProps, MapChildProps {}\n\nexport function useMap(props: UseMap = {}) {\n  const { widget, minZoom, maxZoom, mapType, enableHighResolution, enableAutoResize, enableMapClick } = props;\n  const [map, setMap] = useState<BMap.Map>();\n  const [zoom, setZoom] = useState(props.zoom || 15);\n  const [container, setContainer] = useState<HTMLDivElement | null | undefined>(props.container);\n  const { dispatch } = useContext(Context);\n  useMemo(() => {\n    if (container && !map && BMap) {\n      const instance = new BMap.Map(container, {\n        minZoom,\n        maxZoom,\n        mapType,\n        enableHighResolution,\n        enableAutoResize,\n        enableMapClick,\n      });\n      /**\n       * 加载控件\n       */\n      widget &&\n        widget.forEach((item) => {\n          if (!BMap) {\n            return;\n          }\n          if (typeof item === 'string') {\n            instance.addControl(new (BMap[item] as any)());\n          } else if (typeof item === 'object' && item.control && typeof item.control === 'function') {\n            instance.addControl(item.control(BMap, instance));\n          } else if (typeof item === 'object' && item.name) {\n            const options = typeof item.options === 'function' ? item.options(BMap, instance) : item.options;\n            instance.addControl(new (BMap[item.name] as any)(options));\n          }\n        });\n      setMap(instance);\n    }\n    return () => {\n      if (map) {\n        map.clearOverlays();\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [container, map]);\n\n  useEffect(() => {\n    if (map && container) {\n      dispatch({ map, container, BMap });\n    }\n    return () => {\n      dispatch({ map: undefined, container: undefined, BMap: undefined });\n    };\n  }, [map, container]);\n\n  const [center, setCenter] = useState(props.center || '上海');\n  /**\n   * 根据参数设置中心点\n   */\n  useEffect(() => {\n    if (map && center) {\n      let cent = center;\n      if (center && (center as BMap.Point).lng && (center as BMap.Point).lat) {\n        cent = new BMap.Point((center as BMap.Point).lng, (center as BMap.Point).lat);\n        map.centerAndZoom(cent!, zoom!);\n      }\n      map.centerAndZoom(center, zoom!);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [center, map]);\n\n  const [autoLocalCity, setAutoLocalCity] = useState(props.autoLocalCity);\n  /**\n   * IP定位获取当前城市，进行自动定位\n   */\n  useEffect(() => {\n    if (map && autoLocalCity) {\n      const myCity = new BMap.LocalCity();\n      myCity.get((result) => {\n        setCenter(result.name as any);\n        setZoom(result.level as any);\n        setAutoLocalCity(false);\n      });\n    }\n  }, [autoLocalCity, map]);\n\n  useEventProperties<BMap.Map, UseMap>(map!, props, [\n    'Click',\n    'DblClick',\n    'RightClick',\n    'RightdblClick',\n    'MapTypeChange',\n    'MouseMove',\n    'MouseOver',\n    'MouseOut',\n    'MoveStart',\n    'Moving',\n    'MoveEnd',\n    'ZoomStart',\n    'ZoomEnd',\n    'AddOverlay',\n    'AddControl',\n    'RemoveControl',\n    'RemoveOverlay',\n    'ClearOverlays',\n    'DragStart',\n    'Dragging',\n    'DragEnd',\n    'AddTileLayer',\n    'RemoveTileLayer',\n    'Load',\n    'ReSize',\n    'HotspotClick',\n    'HotspotOver',\n    'HotspotOut',\n    'TilesLoaded',\n    'TouchStart',\n    'TouchMove',\n    'TouchEnd',\n    'LongPress',\n  ]);\n  // 'Center',\n  useProperties<BMap.Map, UseMap>(map!, props, [\n    'DefaultCursor',\n    'DraggingCursor',\n    'MinZoom',\n    'MaxZoom',\n    'MapStyle',\n    'MapStyleV2',\n    'Panorama',\n    'CurrentCity',\n    'MapType',\n    'Viewport',\n    'Zoom',\n  ]);\n  useEnableProperties<BMap.Map, UseMap>(map!, props, [\n    'Dragging',\n    'ScrollWheelZoom',\n    'DoubleClickZoom',\n    'Keyboard',\n    'InertialDragging',\n    'ContinuousZoom',\n    'PinchToZoom',\n    'AutoResize',\n  ]);\n  return {\n    map,\n    setMap,\n    zoom,\n    setZoom,\n    container,\n    setContainer,\n    center,\n    setCenter,\n    autoLocalCity,\n    setAutoLocalCity,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}